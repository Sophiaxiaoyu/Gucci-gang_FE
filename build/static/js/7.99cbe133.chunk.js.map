{"version":3,"sources":["services/order.service.js","pages/OrderDetails.jsx"],"names":["OrderService","amount","itemTotal","ref","paymentMethod","API","post","page","get","id","OrderDetails","useParams","state","useLocation","useState","items","setItems","useEffect","orderService","getOrder","then","res","data","className","order","order_id","total","type","status","formatCurrency","format","parseISO","date","map","item","loading","decoding","src","image_url","alt","name","price","description","quantity","product_id"],"mappings":"6HAEMA,E,oGACQC,EAAQC,EAAWC,EAAKC,GAClC,OAAOC,IAAIC,KAAK,iBAAkB,CAChCL,SACAC,YACAC,MACAC,oB,mCAGSG,GACX,OAAOF,IAAIG,IAAJ,wBAAyBD,M,+BAEzBE,GACP,OAAOJ,IAAIG,IAAJ,kBAAmBC,Q,KAIf,QAAIT,G,2HCsCJU,UAjDM,WAAO,IAClBD,EAAOE,cAAPF,GACAG,EAAUC,cAAVD,MAFiB,EAGCE,mBAAS,MAHV,mBAGlBC,EAHkB,KAGXC,EAHW,KAQzB,OAHAC,qBAAU,WACRC,IAAaC,SAASV,GAAIW,MAAK,SAACC,GAAD,OAASL,EAASK,EAAIC,WACpD,CAACb,IAEF,cAAC,IAAD,UACE,sBAAKc,UAAU,OAAf,UACE,oBAAIA,UAAU,qBAAd,2BACA,4CAAeX,EAAMY,MAAMC,YAC3B,sCAAOb,EAAMY,MAAME,OAAS,gBAA5B,YACA,yCACU,cAAC,QAAD,CAAOC,KAAK,UAAZ,SAAuBf,EAAMY,MAAMI,YAE7C,+CAAkBC,YAAejB,EAAMY,MAAMvB,WAC7C,4CAAe6B,YAAOC,YAASnB,EAAMY,MAAMQ,MAAO,kBAClD,sBAAKT,UAAU,aAAf,UACE,oBAAIA,UAAU,oBAAd,iCADF,OAEGR,QAFH,IAEGA,OAFH,EAEGA,EAAOkB,KAAI,SAACC,GAAD,OACV,eAAC,OAAD,CAEEX,UAAU,qCAFZ,UAIE,qBACEA,UAAU,6DACVY,QAAQ,OACRC,SAAS,QACTC,IAAKH,EAAKI,UACVC,IAAKL,EAAKM,OAEZ,eAAC,WAAD,WACE,oBAAIjB,UAAU,8BAAd,SAA6CW,EAAKM,OAClD,mBAAGjB,UAAU,OAAb,SAAqBM,YAAeK,EAAKO,SACzC,mBAAGlB,UAAU,mCAAb,SACGW,EAAKQ,cAER,oBAAGnB,UAAU,OAAb,uBAA+BW,EAAKS,iBAhBjCT,EAAKU","file":"static/js/7.99cbe133.chunk.js","sourcesContent":["import API from \"api/axios.config\";\r\n\r\nclass OrderService {\r\n  createOrder(amount, itemTotal, ref, paymentMethod) {\r\n    return API.post(\"/orders/create\", {\r\n      amount,\r\n      itemTotal,\r\n      ref,\r\n      paymentMethod,\r\n    });\r\n  }\r\n  getAllOrders(page) {\r\n    return API.get(`/orders/?page=${page}`);\r\n  }\r\n  getOrder(id) {\r\n    return API.get(`/orders/${id}`);\r\n  }\r\n}\r\n\r\nexport default new OrderService();\r\n","import { Badge, Card, CardBody } from \"@windmill/react-ui\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport { formatCurrency } from \"helpers/formatCurrency\";\r\nimport Layout from \"layout/Layout\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport orderService from \"services/order.service\";\r\n\r\nconst OrderDetails = () => {\r\n  const { id } = useParams();\r\n  const { state } = useLocation();\r\n  const [items, setItems] = useState(null);\r\n\r\n  useEffect(() => {\r\n    orderService.getOrder(id).then((res) => setItems(res.data));\r\n  }, [id]);\r\n  return (\r\n    <Layout>\r\n      <div className=\"my-4\">\r\n        <h1 className=\"font-bold text-2xl\">Order Details</h1>\r\n        <p>Order no: #{state.order.order_id}</p>\r\n        <p>{`${state.order.total || \"Not available\"} items`}</p>\r\n        <p>\r\n          Status: <Badge type=\"success\">{state.order.status}</Badge>\r\n        </p>\r\n        <p>Total Amount: {formatCurrency(state.order.amount)}</p>\r\n        <p>Placed on: {format(parseISO(state.order.date), \"d MMM, yyyy\")}</p>\r\n        <div className=\"border-t-2\">\r\n          <h1 className=\"font-bold text-xl\">Items in your order</h1>\r\n          {items?.map((item) => (\r\n            <Card\r\n              key={item.product_id}\r\n              className=\"flex my-4 p-2 md:flex-row flex-col\"\r\n            >\r\n              <img\r\n                className=\"sm:w-full md:w-1/2 lg:w-1/3 object-contain md:object-cover\"\r\n                loading=\"lazy\"\r\n                decoding=\"async\"\r\n                src={item.image_url}\r\n                alt={item.name}\r\n              />\r\n              <CardBody>\r\n                <h1 className=\"font-semibold text-gray-600\">{item.name}</h1>\r\n                <p className=\"mb-2\">{formatCurrency(item.price)}</p>\r\n                <p className=\"text-gray-600 dark:text-gray-400\">\r\n                  {item.description}\r\n                </p>\r\n                <p className=\"mt-2\">Quantity: {item.quantity}</p>\r\n              </CardBody>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n"],"sourceRoot":""}