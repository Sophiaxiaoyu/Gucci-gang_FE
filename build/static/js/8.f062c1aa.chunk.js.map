{"version":3,"sources":["services/order.service.js","components/OrderItem.jsx","pages/Orders.jsx"],"names":["OrderService","amount","itemTotal","ref","paymentMethod","API","post","page","get","id","OrderItem","order","order_id","total","type","status","formatCurrency","format","parseISO","date","Orders","useOrders","orders","setOrders","useState","currentPage","setCurrentPage","history","useHistory","useEffect","orderService","getAllOrders","then","res","data","length","Layout","loading","className","title","items","map","onClick","push","pathname","state","goToDetails","totalResults","resultsPerPage","onChange","num","label"],"mappings":"6HAEMA,E,oGACQC,EAAQC,EAAWC,EAAKC,GAClC,OAAOC,IAAIC,KAAK,iBAAkB,CAChCL,SACAC,YACAC,MACAC,oB,mCAGSG,GACX,OAAOF,IAAIG,IAAJ,wBAAyBD,M,+BAEzBE,GACP,OAAOJ,IAAIG,IAAJ,kBAAmBC,Q,KAIf,QAAIT,G,kGCFJU,EAZG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAClB,OACE,qCACE,eAAC,YAAD,eAAaA,EAAMC,YACnB,cAAC,YAAD,UAAYD,EAAME,OAAS,kBAC3B,eAAC,YAAD,WAAW,cAAC,QAAD,CAAOC,KAAK,UAAZ,SAAuBH,EAAMI,SAAxC,OACA,cAAC,YAAD,UAAYC,YAAeL,EAAMV,UACjC,cAAC,YAAD,UAAYgB,YAAOC,YAASP,EAAMQ,MAAM,kB,iCCwE/BC,UAnEA,WAAO,IAAD,EACWC,cAAtBC,EADW,EACXA,OAAQC,EADG,EACHA,UADG,EAEmBC,mBAAS,GAF5B,mBAEZC,EAFY,KAECC,EAFD,KAGbC,EAAUC,cAgBhB,OALAC,qBAAU,WACRC,IAAaC,aAAaN,GAAaO,MAAK,SAACC,GAAD,OAASV,EAAUU,EAAIC,WAClE,CAACT,EAAaF,IAGM,KAAb,OAAND,QAAM,IAANA,OAAA,EAAAA,EAAQa,QAER,eAACC,EAAA,EAAD,CAAQC,QAAoB,OAAXf,EAAjB,UACE,oBAAIgB,UAAU,2CAAd,oBACA,iEAMJ,eAACF,EAAA,EAAD,CAAQG,MAAM,SAASF,QAAoB,OAAXf,EAAhC,UACE,oBAAIgB,UAAU,2CAAd,oBACA,eAAC,iBAAD,WACE,eAAC,QAAD,WACE,cAAC,cAAD,UACE,eAAC,WAAD,WACE,cAAC,YAAD,iBACA,cAAC,YAAD,2BACA,cAAC,YAAD,qBACA,cAAC,YAAD,qBACA,cAAC,YAAD,wBAGJ,cAAC,YAAD,iBACGhB,QADH,IACGA,OADH,EACGA,EAAQkB,MAAMC,KAAI,SAAC9B,GAAD,OACjB,cAAC,WAAD,CACE2B,UAAU,iBACVI,QAAS,kBAtCH,SAAC/B,GACnBgB,EAAQgB,KAAK,CACXC,SAAS,UAAD,OAAYjC,EAAMC,UAC1BiC,MAAO,CAAElC,WAmCgBmC,CAAYnC,IAF7B,SAKE,cAAC,EAAD,CAAWA,MAAOA,KAFbA,EAAMC,kBAOnB,cAAC,cAAD,UACE,cAAC,aAAD,CACEmC,aAAY,OAAEzB,QAAF,IAAEA,OAAF,EAAEA,EAAQT,MACtBmC,eAAgB,EAChBC,SArDS,SAACC,GAClBxB,EAAewB,IAqDPC,MAAM","file":"static/js/8.f062c1aa.chunk.js","sourcesContent":["import API from \"api/axios.config\";\r\n\r\nclass OrderService {\r\n  createOrder(amount, itemTotal, ref, paymentMethod) {\r\n    return API.post(\"/orders/create\", {\r\n      amount,\r\n      itemTotal,\r\n      ref,\r\n      paymentMethod,\r\n    });\r\n  }\r\n  getAllOrders(page) {\r\n    return API.get(`/orders/?page=${page}`);\r\n  }\r\n  getOrder(id) {\r\n    return API.get(`/orders/${id}`);\r\n  }\r\n}\r\n\r\nexport default new OrderService();\r\n","import { Badge, TableCell } from '@windmill/react-ui'\r\nimport {format, parseISO} from \"date-fns\"\r\nimport { formatCurrency } from 'helpers/formatCurrency'\r\nimport React from 'react'\r\n\r\nconst OrderItem = ({order}) => {\r\n  return (\r\n    <>\r\n      <TableCell>#{order.order_id}</TableCell>\r\n      <TableCell>{order.total || \"Not available\"}</TableCell>\r\n      <TableCell><Badge type=\"success\">{order.status}</Badge> </TableCell>\r\n      <TableCell>{formatCurrency(order.amount)}</TableCell>\r\n      <TableCell>{format(parseISO(order.date),'dd/MM/yy')}</TableCell>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderItem\r\n\r\n","import {\r\n  Pagination,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@windmill/react-ui\";\r\nimport OrderItem from \"components/OrderItem\";\r\nimport { useOrders } from \"context/OrderContext\";\r\nimport Layout from \"layout/Layout\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport orderService from \"services/order.service\";\r\n\r\nconst Orders = () => {\r\n  const { orders, setOrders } = useOrders();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const history = useHistory();\r\n\r\n  const handlePage = (num) => {\r\n    setCurrentPage(num);\r\n  };\r\n  const goToDetails = (order) => {\r\n    history.push({\r\n      pathname: `orders/${order.order_id}`,\r\n      state: { order },\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    orderService.getAllOrders(currentPage).then((res) => setOrders(res.data));\r\n  }, [currentPage, setOrders]);\r\n\r\n\r\n  if (orders?.length === 0) {\r\n    return (\r\n      <Layout loading={orders === null}>\r\n        <h1 className=\"my-10 text-center text-4xl font-semibold\">Orders</h1>\r\n        <p>You are yet to place an order</p>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout title=\"Orders\" loading={orders === null}>\r\n      <h1 className=\"my-10 text-center text-4xl font-semibold\">Orders</h1>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHeader>\r\n            <TableRow>\r\n              <TableCell>ID</TableCell>\r\n              <TableCell>No. of items</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              <TableCell>Amount</TableCell>\r\n              <TableCell>Date</TableCell>\r\n            </TableRow>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {orders?.items.map((order) => (\r\n              <TableRow\r\n                className=\"cursor-pointer\"\r\n                onClick={() => goToDetails(order)}\r\n                key={order.order_id}\r\n              >\r\n                <OrderItem order={order} />\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <TableFooter>\r\n          <Pagination\r\n            totalResults={orders?.total}\r\n            resultsPerPage={5}\r\n            onChange={handlePage}\r\n            label=\"Table navigation\"\r\n          />\r\n        </TableFooter>\r\n      </TableContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n"],"sourceRoot":""}