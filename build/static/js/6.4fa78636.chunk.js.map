{"version":3,"sources":["services/order.service.js","components/AddressForm.jsx","components/OrderSummary.jsx","components/PaystackBtn.jsx","components/PaymentForm.jsx","pages/Checkout.jsx"],"names":["OrderService","amount","itemTotal","ref","paymentMethod","API","post","page","get","id","PaymentForm","next","userData","useUser","useForm","register","handleSubmit","errors","setValue","useEffect","fullname","email","address","country","city","state","className","onSubmit","data","disabled","type","name","required","valid","message","tag","Link","to","layout","size","OrderSummary","useCart","cartData","cartSubtotal","items","map","item","loading","decoding","src","image_url","alt","formatCurrency","price","quantity","product_id","PaystackBtn","isProcessing","setIsProcessing","cartTotal","setCartData","history","useHistory","onSuccess","orderService","createOrder","reference","then","push","pathname","fromPaymentPage","onClose","toast","error","config","toFixed","publicKey","process","REACT_APP_PAYSTACK_PUB_KEY","initializePayment","usePaystackPayment","onClick","previousStep","addressData","nextStep","useState","setError","stripePromise","loadStripe","REACT_APP_STRIPE_PUB_KEY","e","elements","stripe","a","preventDefault","card","getElement","CardElement","createPaymentMethod","billing_details","line1","result","confirmCardPayment","client_secret","payment_method","color","Checkout","activeStep","setActiveStep","setAddressData","useLocation","fromCartPage","length","prevStep","Layout","AddressForm"],"mappings":"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","file":"static/js/6.4fa78636.chunk.js","sourcesContent":["import API from \"api/axios.config\";\r\n\r\nclass OrderService {\r\n  createOrder(amount, itemTotal, ref, paymentMethod) {\r\n    return API.post(\"/orders/create\", {\r\n      amount,\r\n      itemTotal,\r\n      ref,\r\n      paymentMethod,\r\n    });\r\n  }\r\n  getAllOrders(page) {\r\n    return API.get(`/orders/?page=${page}`);\r\n  }\r\n  getOrder(id) {\r\n    return API.get(`/orders/${id}`);\r\n  }\r\n}\r\n\r\nexport default new OrderService();\r\n","import { Button, HelperText, Input, Label } from \"@windmill/react-ui\";\r\nimport { useUser } from \"context/UserContext\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PaymentForm = ({ next }) => {\r\n  const { userData } = useUser();\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  useEffect(() => {\r\n    setValue(\"fullname\", userData?.fullname);\r\n    setValue(\"email\", userData?.email);\r\n    setValue(\"address\", userData?.address);\r\n    setValue(\"country\", userData?.country);\r\n    setValue(\"city\", userData?.city);\r\n    setValue(\"state\", userData?.state);\r\n  }, [setValue, userData]);\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <h1 className=\"text-3xl text-center mb-4 font-semibold\">\r\n        Address Details\r\n      </h1>\r\n      <form\r\n        className=\"border p-4 border-black-4 w-full md:w-1/2 mx-auto\"\r\n        onSubmit={handleSubmit((data) => next(data))}\r\n      >\r\n        <Label className=\"block text-grey-darker text-sm font-bold mb-4\">\r\n          <span>Fullname</span>\r\n          <Input\r\n            disabled\r\n            type=\"text\"\r\n            className=\"shadow appearance-none border rounded w-full text-grey-darker mt-2 px-2 py-2 border focus:outline-none\"\r\n            name=\"fullname\"\r\n            ref={register({ required: \"Required\" })}\r\n          />\r\n          {errors.fullname && (\r\n            <HelperText valid={false}>{errors.fullname.message}</HelperText>\r\n          )}\r\n        </Label>\r\n        <Label className=\"block text-grey-darker text-sm font-bold mb-4\">\r\n          <span>Email</span>\r\n          <Input\r\n            disabled\r\n            className=\"shadow appearance-none border rounded w-full text-grey-darker mt-2 px-2 py-2 border focus:outline-none\"\r\n            type=\"text\"\r\n            name=\"email\"\r\n            ref={register({ required: \"Required\" })}\r\n          />\r\n          {errors.email && (\r\n            <HelperText valid={false}>{errors.email.message}</HelperText>\r\n          )}\r\n        </Label>\r\n        <Label className=\"block text-grey-darker text-sm font-bold mb-4\">\r\n          <span>Address</span>\r\n          <Input\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker mt-2 px-2 py-2 border focus:outline-none\"\r\n            type=\"text\"\r\n            name=\"address\"\r\n            ref={register({ required: \"Required\" })}\r\n          />\r\n          {errors.address && (\r\n            <HelperText valid={false}>{errors.address.message}</HelperText>\r\n          )}\r\n        </Label>\r\n        <Label className=\"block text-grey-darker text-sm font-bold mb-4\">\r\n          <span>Country</span>\r\n          <Input\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker mt-2 px-2 py-2 border focus:outline-none\"\r\n            type=\"text\"\r\n            name=\"country\"\r\n            ref={register({ required: \"Required\" })}\r\n          />\r\n          {errors.country && (\r\n            <HelperText valid={false}>{errors.country.message}</HelperText>\r\n          )}\r\n        </Label>\r\n        <Label className=\"block text-grey-darker text-sm font-bold mb-4\">\r\n          <span>State/Region</span>\r\n          <Input\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker mt-2 px-2 py-2 border focus:outline-none\"\r\n            type=\"text\"\r\n            name=\"state\"\r\n            ref={register({ required: \"Required\" })}\r\n          />\r\n          {errors.state && (\r\n            <HelperText valid={false}>{errors.state.message}</HelperText>\r\n          )}\r\n        </Label>\r\n        <Label className=\"block text-grey-darker text-sm font-bold mb-4\">\r\n          <span>City</span>\r\n          <Input\r\n            className=\"shadow appearance-none border rounded w-full text-grey-darker mt-2 px-2 py-2 border focus:outline-none\"\r\n            type=\"text\"\r\n            name=\"city\"\r\n            ref={register({ required: \"Required\" })}\r\n          />\r\n          {errors.city && (\r\n            <HelperText valid={false}>{errors.city.message}</HelperText>\r\n          )}\r\n        </Label>\r\n        <div className=\"flex justify-between\">\r\n          <Button tag={Link} to=\"/cart\" layout=\"outline\" size=\"small\">\r\n            Back to cart\r\n          </Button>\r\n          <Button type=\"submit\" size=\"small\">\r\n            Proceed\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n","import { useCart } from \"context/CartContext\";\r\nimport { formatCurrency } from \"helpers/formatCurrency\";\r\nimport React from \"react\";\r\n\r\nconst OrderSummary = () => {\r\n  const { cartData, cartSubtotal } = useCart();\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-xl font-medium\">Order Summary</h1>\r\n      {cartData?.items.map((item) => (\r\n        <div key={item.product_id} className=\"flex border-b-2 py-2 space-x-2\">\r\n          <img\r\n            className=\"w-2/5\"\r\n            loading=\"lazy\"\r\n            decoding=\"async\"\r\n            src={item.image_url}\r\n            alt={item.name}\r\n          />\r\n          <div className=\"flex flex-col space-y-1\">\r\n            <span className=\"text-2xl font-semibold\">{item.name}</span>\r\n            <span className=\"text-xl font-medium\">\r\n              {formatCurrency(item.price)}\r\n            </span>\r\n            <span className=\"\">Quantity: {item.quantity}</span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <p className=\"text-3xl font-semibold text-right p-2\">\r\n        Total: {formatCurrency(cartSubtotal)}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderSummary;\r\n","import { Button } from \"@windmill/react-ui\";\nimport { useCart } from \"context/CartContext\";\nimport { useUser } from \"context/UserContext\";\nimport React from \"react\";\nimport toast from \"react-hot-toast\";\nimport { usePaystackPayment } from \"react-paystack\";\nimport { useHistory } from \"react-router\";\nimport orderService from \"services/order.service\";\n\nconst PaystackBtn = ({ isProcessing, setIsProcessing }) => {\n  const { cartSubtotal, cartTotal, cartData, setCartData } = useCart();\n  const { userData } = useUser();\n  const history = useHistory();\n\n  const onSuccess = (data) => {\n    orderService\n      .createOrder(cartSubtotal, cartTotal, data.reference, \"PAYSTACK\")\n      .then(() => {\n        setCartData({ ...cartData, items: [] });\n        setIsProcessing(false);\n        history.push({\n          pathname: \"/cart/success\",\n          state: {\n            fromPaymentPage: true,\n          },\n        });\n      });\n  };\n\n  const onClose = () => {\n    toast.error(\"Payment cancelled\");\n    setIsProcessing(false);\n  };\n\n  const config = {\n    email: userData.email,\n    amount: (cartSubtotal * 100).toFixed(2),\n    publicKey: process.env.REACT_APP_PAYSTACK_PUB_KEY,\n  };\n\n  const initializePayment = usePaystackPayment(config);\n  return (\n    <Button\n      disabled={isProcessing}\n      className=\"w-full\"\n      onClick={() => {\n        setIsProcessing(true);\n        initializePayment(onSuccess, onClose);\n      }}\n    >\n      {isProcessing ? \"Processing...\" : \"Pay with Paystack\"}\n    </Button>\n  );\n};\n\nexport default PaystackBtn;\n","import {\r\n  CardElement,\r\n  Elements,\r\n  ElementsConsumer,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Button, HelperText } from \"@windmill/react-ui\";\r\nimport API from \"api/axios.config\";\r\nimport { useCart } from \"context/CartContext\";\r\nimport { formatCurrency } from \"helpers/formatCurrency\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport OrderService from \"services/order.service\";\r\nimport OrderSummary from \"./OrderSummary\";\r\nimport PaystackBtn from \"./PaystackBtn\";\r\n\r\nconst PaymentForm = ({ previousStep, addressData, nextStep }) => {\r\n  const { cartSubtotal, cartTotal, cartData, setCartData } = useCart();\r\n  const [error, setError] = useState();\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUB_KEY);\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (e, elements, stripe) => {\r\n    e.preventDefault();\r\n    setError();\r\n    const { fullname, email, address, city, state } = addressData;\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n    try {\r\n      setIsProcessing(true);\r\n      const { data } = await API.post(\"/payment\", {\r\n        amount: (cartSubtotal * 100).toFixed(),\r\n        email,\r\n      });\r\n\r\n      const card = elements.getElement(CardElement);\r\n      const result = await stripe.createPaymentMethod({\r\n        type: \"card\",\r\n        card,\r\n        billing_details: {\r\n          name: fullname,\r\n          email,\r\n          address: {\r\n            city,\r\n            line1: address,\r\n            state,\r\n            country: \"NG\", // TODO: change later\r\n          },\r\n        },\r\n      });\r\n      if (result.error) {\r\n        setError(result.error);\r\n      }\r\n\r\n      await stripe.confirmCardPayment(data.client_secret, {\r\n        payment_method: result.paymentMethod.id,\r\n      });\r\n\r\n      OrderService.createOrder(cartSubtotal, cartTotal, data.id, \"STRIPE\").then(\r\n        () => {\r\n          setCartData({ ...cartData, items: [] });\r\n          setIsProcessing(false);\r\n          history.push({\r\n            pathname: \"/cart/success\",\r\n            state: {\r\n              fromPaymentPage: true,\r\n            },\r\n          });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      setIsProcessing(false);\r\n      // throw error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full md:w-1/2\">\r\n      <h1 className=\"text-3xl font-semibold text-center mb-2\">Checkout</h1>\r\n      <OrderSummary />\r\n      <h1 className=\"font-medium text-2xl\">Pay with Stripe</h1>\r\n      <Elements stripe={stripePromise}>\r\n        <ElementsConsumer>\r\n          {({ stripe, elements }) => (\r\n            <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\r\n              <CardElement className=\"border py-2\" />\r\n              {error && <HelperText valid={false}>{error.message}</HelperText>}\r\n              <div className=\"flex justify-between py-4\">\r\n                <Button onClick={previousStep} layout=\"outline\" size=\"small\">\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  disabled={!stripe || isProcessing}\r\n                  type=\"submit\"\r\n                  size=\"small\"\r\n                >\r\n                  {isProcessing || !stripe ? (\r\n                    <PulseLoader size={10} color={\"#0a138b\"} />\r\n                  ) : (\r\n                    `Pay ${formatCurrency(cartSubtotal)}`\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </ElementsConsumer>\r\n      </Elements>\r\n      <PaystackBtn\r\n        isProcessing={isProcessing}\r\n        setIsProcessing={setIsProcessing}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n","import Layout from \"layout/Layout\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport AddressForm from \"components/AddressForm\";\r\nimport PaymentForm from \"components/PaymentForm\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { useCart } from \"context/CartContext\";\r\n\r\nconst Checkout = () => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [addressData, setAddressData] = useState();\r\n  const { state } = useLocation();\r\n  const history = useHistory();\r\n  const { cartData } = useCart();\r\n\r\n  useEffect(() => {\r\n    if (!state?.fromCartPage) {\r\n      return history.push(\"/cart\");\r\n    }\r\n\r\n    if (cartData.items.length === 0) {\r\n      return history.push(\"/cart\");\r\n    }\r\n  }, [cartData, history, state]);\r\n\r\n  const nextStep = () =>\r\n    setActiveStep((prevStep) => setActiveStep(prevStep + 1));\r\n  const previousStep = () =>\r\n    setActiveStep((prevStep) => setActiveStep(prevStep - 1));\r\n\r\n  const next = (data) => {\r\n    setAddressData(data);\r\n    nextStep();\r\n  };\r\n  return (\r\n    <Layout>\r\n      <div className=\"flex flex-col justify-center items-center mt-10\">\r\n        {activeStep === 0 ? (\r\n          <AddressForm next={next} />\r\n        ) : (\r\n          <PaymentForm\r\n            nextStep={nextStep}\r\n            previousStep={previousStep}\r\n            addressData={addressData}\r\n          />\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"sourceRoot":""}