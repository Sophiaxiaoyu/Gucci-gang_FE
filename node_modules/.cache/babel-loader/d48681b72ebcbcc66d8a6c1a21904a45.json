{"ast":null,"code":"import { each, isFunction } from '@antv/util';\n/**\n * 在 Chart 中查找特定 id 的子 View\n * @param chart\n * @param id\n */\n\nexport function findViewById(chart, id) {\n  return chart.views.find(function (view) {\n    return view.id === id;\n  });\n}\n/**\n * 获取同 view 同一级的所有 views\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\n\nexport function getViews(view) {\n  var parent = view.parent;\n  return parent ? parent.views : [];\n}\n/**\n * 获取同 view 同一级的 views，不包括自身\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\n\nexport function getSiblingViews(view) {\n  return getViews(view).filter(function (sub) {\n    return sub !== view;\n  });\n}\n/**\n * 所有的 Geometries 都使用同一动画（各个图形如有区别，自行覆盖）并添加处理动画回调\n * @param view View\n * @param animation 动画配置\n */\n\nexport function addViewAnimation(view, animation, geometries) {\n  if (geometries === void 0) {\n    geometries = view.geometries;\n  } // 同时设置整个 view 动画选项\n\n\n  if (typeof animation === 'boolean') {\n    view.animate(animation);\n  } else {\n    view.animate(true);\n  } // 所有的 Geometry 都使用同一动画（各个图形如有区别，自行覆盖）\n\n\n  each(geometries, function (g) {\n    var animationCfg;\n\n    if (isFunction(animation)) {\n      animationCfg = animation(g.type || g.shapeType, g) || true;\n    } else {\n      animationCfg = animation;\n    }\n\n    g.animate(animationCfg);\n  });\n}","map":{"version":3,"sources":["../../src/utils/view.ts"],"names":[],"mappings":"AACA,SAAS,IAAT,EAAe,UAAf,QAAiC,YAAjC;AAIA;;;;AAIG;;AACH,OAAM,SAAU,YAAV,CAAuB,KAAvB,EAAoC,EAApC,EAA8C;AAClD,SAAO,KAAK,CAAC,KAAN,CAAY,IAAZ,CAAiB,UAAC,IAAD,EAAW;AAAK,WAAA,IAAI,CAAC,EAAL,KAAA,EAAA;AAAc,GAA/C,CAAP;AACD;AAED;;;;;AAKG;;AACH,OAAM,SAAU,QAAV,CAAmB,IAAnB,EAA6B;AACjC,MAAM,MAAM,GAAG,IAAI,CAAC,MAApB;AACA,SAAO,MAAM,GAAG,MAAM,CAAC,KAAV,GAAkB,EAA/B;AACD;AAED;;;;;AAKG;;AACH,OAAM,SAAU,eAAV,CAA0B,IAA1B,EAAoC;AACxC,SAAO,QAAQ,CAAC,IAAD,CAAR,CAAe,MAAf,CAAsB,UAAC,GAAD,EAAI;AAAK,WAAA,GAAG,KAAH,IAAA;AAAY,GAA3C,CAAP;AACD;AAED;;;;AAIG;;AACH,OAAM,SAAU,gBAAV,CACJ,IADI,EAEJ,SAFI,EAGJ,UAHI,EAGsD;AAA1D,MAAA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAA2C,IAAI,CAAC,UAAhD;AAA0D,GAAA,CAE1D;;;AACA,MAAI,OAAO,SAAP,KAAqB,SAAzB,EAAoC;AAClC,IAAA,IAAI,CAAC,OAAL,CAAa,SAAb;AACD,GAFD,MAEO;AACL,IAAA,IAAI,CAAC,OAAL,CAAa,IAAb;AACD,GAPyD,CAS1D;;;AACA,EAAA,IAAI,CAAC,UAAD,EAAa,UAAC,CAAD,EAAY;AAC3B,QAAI,YAAJ;;AACA,QAAI,UAAU,CAAC,SAAD,CAAd,EAA2B;AACzB,MAAA,YAAY,GAAG,SAAS,CAAC,CAAC,CAAC,IAAF,IAAU,CAAC,CAAC,SAAb,EAAwB,CAAxB,CAAT,IAAuC,IAAtD;AACD,KAFD,MAEO;AACL,MAAA,YAAY,GAAG,SAAf;AACD;;AAED,IAAA,CAAC,CAAC,OAAF,CAAU,YAAV;AACD,GATG,CAAJ;AAUD","sourcesContent":["import { Geometry, View, Types } from '@antv/g2';\nimport { each, isFunction } from '@antv/util';\nimport { Options } from '../types';\nimport { Animation } from '../types/animation';\n\n/**\n * 在 Chart 中查找特定 id 的子 View\n * @param chart\n * @param id\n */\nexport function findViewById(chart: View, id: string): View {\n  return chart.views.find((view: View) => view.id === id);\n}\n\n/**\n * 获取同 view 同一级的所有 views\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\nexport function getViews(view: View): View[] {\n  const parent = view.parent;\n  return parent ? parent.views : [];\n}\n\n/**\n * 获取同 view 同一级的 views，不包括自身\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\nexport function getSiblingViews(view: View): View[] {\n  return getViews(view).filter((sub) => sub !== view);\n}\n\n/**\n * 所有的 Geometries 都使用同一动画（各个图形如有区别，自行覆盖）并添加处理动画回调\n * @param view View\n * @param animation 动画配置\n */\nexport function addViewAnimation(\n  view: View,\n  animation: Options['animation'],\n  geometries: Geometry<Types.ShapePoint>[] = view.geometries\n) {\n  // 同时设置整个 view 动画选项\n  if (typeof animation === 'boolean') {\n    view.animate(animation);\n  } else {\n    view.animate(true);\n  }\n\n  // 所有的 Geometry 都使用同一动画（各个图形如有区别，自行覆盖）\n  each(geometries, (g: Geometry) => {\n    let animationCfg;\n    if (isFunction(animation)) {\n      animationCfg = animation(g.type || g.shapeType, g) || true;\n    } else {\n      animationCfg = animation;\n    }\n\n    g.animate(animationCfg as Animation);\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}