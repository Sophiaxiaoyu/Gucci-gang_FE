{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/xiaxiaoyu/Desktop/javascript/DBSM_phone/PHONE_STORE_FE/src/pages/OrderDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport { Badge, Card, CardBody } from \"@windmill/react-ui\";\nimport { format, parseISO } from \"date-fns\";\nimport { formatCurrency } from \"helpers/formatCurrency\";\nimport Layout from \"layout/Layout\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport orderService from \"services/order.service\";\n\nconst OrderDetails = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    state\n  } = useLocation();\n  const [items, setItems] = useState(null);\n  useEffect(() => {\n    orderService.getOrder(id).then(res => setItems(res.data));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-bold text-2xl\",\n        children: \"Order Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Order no: #\", state.order.order_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${state.order.total || \"Not available\"} items`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", /*#__PURE__*/_jsxDEV(Badge, {\n          type: \"success\",\n          children: state.order.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Amount: \", formatCurrency(state.order.amount)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Placed on: \", format(parseISO(state.order.date), \"d MMM, yyyy\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-t-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-bold text-xl\",\n          children: \"Items in your order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), items === null || items === void 0 ? void 0 : items.map(item => /*#__PURE__*/_jsxDEV(Card, {\n          className: \"flex my-4 p-2 md:flex-row flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"sm:w-full md:w-1/2 lg:w-1/3 object-contain md:object-cover\",\n            loading: \"lazy\",\n            decoding: \"async\",\n            src: item.image_url,\n            alt: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"font-semibold text-gray-600\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-2\",\n              children: formatCurrency(item.price)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 dark:text-gray-400\",\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2\",\n              children: [\"Quantity: \", item.quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, item.product_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderDetails, \"VmON9cLBlR5n2NUzmqqdq+8c3rU=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = OrderDetails;\nexport default OrderDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderDetails\");","map":{"version":3,"sources":["/Users/xiaxiaoyu/Desktop/javascript/DBSM_phone/PHONE_STORE_FE/src/pages/OrderDetails.jsx"],"names":["Badge","Card","CardBody","format","parseISO","formatCurrency","Layout","React","useEffect","useState","useLocation","useParams","orderService","OrderDetails","id","state","items","setItems","getOrder","then","res","data","order","order_id","total","status","amount","date","map","item","image_url","name","price","description","quantity","product_id"],"mappings":"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","sourcesContent":["import { Badge, Card, CardBody } from \"@windmill/react-ui\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport { formatCurrency } from \"helpers/formatCurrency\";\r\nimport Layout from \"layout/Layout\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport orderService from \"services/order.service\";\r\n\r\nconst OrderDetails = () => {\r\n  const { id } = useParams();\r\n  const { state } = useLocation();\r\n  const [items, setItems] = useState(null);\r\n\r\n  useEffect(() => {\r\n    orderService.getOrder(id).then((res) => setItems(res.data));\r\n  }, [id]);\r\n  return (\r\n    <Layout>\r\n      <div className=\"my-4\">\r\n        <h1 className=\"font-bold text-2xl\">Order Details</h1>\r\n        <p>Order no: #{state.order.order_id}</p>\r\n        <p>{`${state.order.total || \"Not available\"} items`}</p>\r\n        <p>\r\n          Status: <Badge type=\"success\">{state.order.status}</Badge>\r\n        </p>\r\n        <p>Total Amount: {formatCurrency(state.order.amount)}</p>\r\n        <p>Placed on: {format(parseISO(state.order.date), \"d MMM, yyyy\")}</p>\r\n        <div className=\"border-t-2\">\r\n          <h1 className=\"font-bold text-xl\">Items in your order</h1>\r\n          {items?.map((item) => (\r\n            <Card\r\n              key={item.product_id}\r\n              className=\"flex my-4 p-2 md:flex-row flex-col\"\r\n            >\r\n              <img\r\n                className=\"sm:w-full md:w-1/2 lg:w-1/3 object-contain md:object-cover\"\r\n                loading=\"lazy\"\r\n                decoding=\"async\"\r\n                src={item.image_url}\r\n                alt={item.name}\r\n              />\r\n              <CardBody>\r\n                <h1 className=\"font-semibold text-gray-600\">{item.name}</h1>\r\n                <p className=\"mb-2\">{formatCurrency(item.price)}</p>\r\n                <p className=\"text-gray-600 dark:text-gray-400\">\r\n                  {item.description}\r\n                </p>\r\n                <p className=\"mt-2\">Quantity: {item.quantity}</p>\r\n              </CardBody>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n"]},"metadata":{},"sourceType":"module"}