{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/xiaxiaoyu/Desktop/javascript/PHONE_STORE_FE/src/components/PaystackBtn.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@windmill/react-ui\";\nimport { useCart } from \"context/CartContext\";\nimport { useUser } from \"context/UserContext\";\nimport React from \"react\";\nimport toast from \"react-hot-toast\";\nimport { usePaystackPayment } from \"react-paystack\";\nimport { useHistory } from \"react-router\";\nimport orderService from \"services/order.service\";\n\nconst PaystackBtn = ({\n  isProcessing,\n  setIsProcessing\n}) => {\n  _s();\n\n  const {\n    cartSubtotal,\n    cartTotal,\n    cartData,\n    setCartData\n  } = useCart();\n  const {\n    userData\n  } = useUser();\n  const history = useHistory();\n\n  const onSuccess = data => {\n    orderService.createOrder(cartSubtotal, cartTotal, data.reference, \"PAYSTACK\").then(() => {\n      setCartData({ ...cartData,\n        items: []\n      });\n      setIsProcessing(false);\n      history.push({\n        pathname: \"/cart/success\",\n        state: {\n          fromPaymentPage: true\n        }\n      });\n    });\n  };\n\n  const onClose = () => {\n    toast.error(\"Payment cancelled\");\n    setIsProcessing(false);\n  };\n\n  const config = {\n    email: userData.email,\n    amount: (cartSubtotal * 100).toFixed(2),\n    publicKey: process.env.REACT_APP_PAYSTACK_PUB_KEY\n  };\n  const initializePayment = usePaystackPayment(config);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    disabled: isProcessing,\n    className: \"w-full\",\n    onClick: () => {\n      setIsProcessing(true);\n      initializePayment(onSuccess, onClose);\n    },\n    children: isProcessing ? \"Processing...\" : \"Pay with Paystack\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaystackBtn, \"iCs0cTsb+bF5oFTv7pmo3oQ4DJY=\", false, function () {\n  return [useCart, useUser, useHistory, usePaystackPayment];\n});\n\n_c = PaystackBtn;\nexport default PaystackBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaystackBtn\");","map":{"version":3,"sources":["/Users/xiaxiaoyu/Desktop/javascript/PHONE_STORE_FE/src/components/PaystackBtn.jsx"],"names":["Button","useCart","useUser","React","toast","usePaystackPayment","useHistory","orderService","PaystackBtn","isProcessing","setIsProcessing","cartSubtotal","cartTotal","cartData","setCartData","userData","history","onSuccess","data","createOrder","reference","then","items","push","pathname","state","fromPaymentPage","onClose","error","config","email","amount","toFixed","publicKey","process","env","REACT_APP_PAYSTACK_PUB_KEY","initializePayment"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,oBAAvB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAAuC;AAAA;;AACzD,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA,QAA3B;AAAqCC,IAAAA;AAArC,MAAqDb,OAAO,EAAlE;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAeb,OAAO,EAA5B;AACA,QAAMc,OAAO,GAAGV,UAAU,EAA1B;;AAEA,QAAMW,SAAS,GAAIC,IAAD,IAAU;AAC1BX,IAAAA,YAAY,CACTY,WADH,CACeR,YADf,EAC6BC,SAD7B,EACwCM,IAAI,CAACE,SAD7C,EACwD,UADxD,EAEGC,IAFH,CAEQ,MAAM;AACVP,MAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeS,QAAAA,KAAK,EAAE;AAAtB,OAAD,CAAX;AACAZ,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAM,MAAAA,OAAO,CAACO,IAAR,CAAa;AACXC,QAAAA,QAAQ,EAAE,eADC;AAEXC,QAAAA,KAAK,EAAE;AACLC,UAAAA,eAAe,EAAE;AADZ;AAFI,OAAb;AAMD,KAXH;AAYD,GAbD;;AAeA,QAAMC,OAAO,GAAG,MAAM;AACpBvB,IAAAA,KAAK,CAACwB,KAAN,CAAY,mBAAZ;AACAlB,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAHD;;AAKA,QAAMmB,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAEf,QAAQ,CAACe,KADH;AAEbC,IAAAA,MAAM,EAAE,CAACpB,YAAY,GAAG,GAAhB,EAAqBqB,OAArB,CAA6B,CAA7B,CAFK;AAGbC,IAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAHV,GAAf;AAMA,QAAMC,iBAAiB,GAAGhC,kBAAkB,CAACwB,MAAD,CAA5C;AACA,sBACE,QAAC,MAAD;AACE,IAAA,QAAQ,EAAEpB,YADZ;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,eAAe,CAAC,IAAD,CAAf;AACA2B,MAAAA,iBAAiB,CAACpB,SAAD,EAAYU,OAAZ,CAAjB;AACD,KANH;AAAA,cAQGlB,YAAY,GAAG,eAAH,GAAqB;AARpC;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA5CD;;GAAMD,W;UACuDP,O,EACtCC,O,EACLI,U,EA4BUD,kB;;;KA/BtBG,W;AA8CN,eAAeA,WAAf","sourcesContent":["import { Button } from \"@windmill/react-ui\";\nimport { useCart } from \"context/CartContext\";\nimport { useUser } from \"context/UserContext\";\nimport React from \"react\";\nimport toast from \"react-hot-toast\";\nimport { usePaystackPayment } from \"react-paystack\";\nimport { useHistory } from \"react-router\";\nimport orderService from \"services/order.service\";\n\nconst PaystackBtn = ({ isProcessing, setIsProcessing }) => {\n  const { cartSubtotal, cartTotal, cartData, setCartData } = useCart();\n  const { userData } = useUser();\n  const history = useHistory();\n\n  const onSuccess = (data) => {\n    orderService\n      .createOrder(cartSubtotal, cartTotal, data.reference, \"PAYSTACK\")\n      .then(() => {\n        setCartData({ ...cartData, items: [] });\n        setIsProcessing(false);\n        history.push({\n          pathname: \"/cart/success\",\n          state: {\n            fromPaymentPage: true,\n          },\n        });\n      });\n  };\n\n  const onClose = () => {\n    toast.error(\"Payment cancelled\");\n    setIsProcessing(false);\n  };\n\n  const config = {\n    email: userData.email,\n    amount: (cartSubtotal * 100).toFixed(2),\n    publicKey: process.env.REACT_APP_PAYSTACK_PUB_KEY,\n  };\n\n  const initializePayment = usePaystackPayment(config);\n  return (\n    <Button\n      disabled={isProcessing}\n      className=\"w-full\"\n      onClick={() => {\n        setIsProcessing(true);\n        initializePayment(onSuccess, onClose);\n      }}\n    >\n      {isProcessing ? \"Processing...\" : \"Pay with Paystack\"}\n    </Button>\n  );\n};\n\nexport default PaystackBtn;\n"]},"metadata":{},"sourceType":"module"}