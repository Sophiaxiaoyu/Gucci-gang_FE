{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { get, each } from '@antv/util';\nimport { intersect } from '../../../util/collision-detect';\nimport { getLabelBackgroundInfo } from '../util';\nimport { createWorker } from '../util/createWorker';\nimport { code as layoutCode } from './worker/hide-overlap';\n\nvar layout = function (items) {\n  var boxes = items.slice();\n\n  for (var i = 0; i < boxes.length; i++) {\n    var box1 = boxes[i];\n\n    if (box1.visible) {\n      for (var j = i + 1; j < boxes.length; j++) {\n        var box2 = boxes[j];\n\n        if (box1 !== box2 && box2.visible) {\n          if (intersect(box1, box2)) {\n            box2.visible = false;\n          }\n        }\n      }\n    }\n  }\n\n  return boxes;\n};\n\nvar cache = new Map();\nvar worker = createWorker(layoutCode);\n/**\n * label 防遮挡布局：在不改变 label 位置的情况下对相互重叠的 label 进行隐藏（非移除）\n * 不同于 'overlap' 类型的布局，该布局不会对 label 的位置进行偏移调整。\n * @param labels 参与布局调整的 label 数组集合\n */\n\nexport function hideOverlap(labelItems, labels, shapes, region) {\n  return __awaiter(this, void 0, void 0, function () {\n    var boxes, memoKey, cb, params, res, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          boxes = labels.map(function (d, idx) {\n            return __assign(__assign({}, getLabelBackgroundInfo(d, labelItems[idx], get(labelItems[idx], 'background.padding'))), {\n              visible: true\n            });\n          });\n          memoKey = JSON.stringify(boxes);\n\n          cb = function (items) {\n            cache.set(memoKey, items);\n            each(items, function (_a, idx) {\n              var visible = _a.visible;\n              var labelShape = labels[idx];\n\n              if (visible) {\n                labelShape === null || labelShape === void 0 ? void 0 : labelShape.show();\n              } else {\n                labelShape === null || labelShape === void 0 ? void 0 : labelShape.hide();\n              }\n            });\n            return items;\n          };\n\n          if (!cache.get(memoKey)) return [3\n          /*break*/\n          , 1];\n          cb(cache.get(memoKey));\n          return [3\n          /*break*/\n          , 7];\n\n        case 1:\n          if (!worker) return [3\n          /*break*/\n          , 6];\n          _a.label = 2;\n\n        case 2:\n          _a.trys.push([2, 4,, 5]);\n\n          params = JSON.stringify({\n            type: 'hide-overlap',\n            items: boxes\n          });\n          return [4\n          /*yield*/\n          , worker.post(params, function () {\n            return cb(layout(boxes));\n          })];\n\n        case 3:\n          res = _a.sent();\n          cb(Array.isArray(res.data) ? res.data : []);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          e_1 = _a.sent();\n          console.error(e_1);\n          cb(layout(boxes));\n          return [3\n          /*break*/\n          , 5];\n\n        case 5:\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          // Normal layout in main thread.\n          cb(layout(boxes));\n          _a.label = 7;\n\n        case 7:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}","map":{"version":3,"sources":["../../../../src/geometry/label/layout/hide-overlap.ts"],"names":[],"mappings":"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","sourcesContent":["import { get, each } from '@antv/util';\nimport { BBox, IGroup, IShape } from '../../../dependents';\nimport { intersect } from '../../../util/collision-detect';\nimport { LabelItem } from '../interface';\nimport { getLabelBackgroundInfo } from '../util';\nimport { createWorker } from '../util/createWorker';\nimport { code as layoutCode } from './worker/hide-overlap';\n\ntype Item = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  rotation?: number;\n  visible?: boolean;\n};\n\nconst layout = (items: Item[]): Item[] => {\n  const boxes = items.slice();\n  for (let i = 0; i < boxes.length; i++) {\n    const box1 = boxes[i];\n    if (box1.visible) {\n      for (let j = i + 1; j < boxes.length; j++) {\n        const box2 = boxes[j];\n        if (box1 !== box2 && box2.visible) {\n          if (intersect(box1, box2)) {\n            box2.visible = false;\n          }\n        }\n      }\n    }\n  }\n  return boxes;\n};\n\nconst cache: Map<string, any> = new Map();\nconst worker = createWorker(layoutCode);\n\n/**\n * label 防遮挡布局：在不改变 label 位置的情况下对相互重叠的 label 进行隐藏（非移除）\n * 不同于 'overlap' 类型的布局，该布局不会对 label 的位置进行偏移调整。\n * @param labels 参与布局调整的 label 数组集合\n */\nexport async function hideOverlap(\n  labelItems: LabelItem[],\n  labels: IGroup[],\n  shapes: IShape[] | IGroup[],\n  region: BBox\n) {\n  const boxes = labels.map((d, idx) => ({\n    ...getLabelBackgroundInfo(d, labelItems[idx], get(labelItems[idx], 'background.padding')),\n    visible: true,\n  }));\n  const memoKey = JSON.stringify(boxes);\n  const cb = (items: Item[]) => {\n    cache.set(memoKey, items);\n    each(items, ({ visible }, idx) => {\n      const labelShape = labels[idx];\n      if (visible) {\n        labelShape?.show();\n      } else {\n        labelShape?.hide();\n      }\n    });\n    return items;\n  };\n  if (cache.get(memoKey)) {\n    cb(cache.get(memoKey));\n  } else if (worker) {\n    // Do layout in worker.\n    try {\n      const params = JSON.stringify({ type: 'hide-overlap', items: boxes });\n      const res = await worker.post(params, () => cb(layout(boxes)));\n      cb(Array.isArray(res.data) ? res.data : []);\n    } catch (e) {\n      console.error(e);\n      cb(layout(boxes));\n    }\n  } else {\n    // Normal layout in main thread.\n    cb(layout(boxes));\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}