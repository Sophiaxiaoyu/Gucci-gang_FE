{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/xiaxiaoyu/Desktop/javascript/DBSM_phone/PHONE_STORE_FE/src/components/ForgotPasswordModal.jsx\",\n    _s = $RefreshSig$();\n\nimport { Backdrop, Button, HelperText, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader } from \"@windmill/react-ui\";\nimport React, { useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport authService from \"services/auth.service\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport { useForm } from \"react-hook-form\";\n\nconst ForgotPasswordModal = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [msg, setMsg] = useState(\"\");\n  const [isSending, setIsSending] = useState(false);\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n\n  const toggleModal = () => {\n    setMsg(\"\");\n    setIsOpen(!isOpen);\n  };\n\n  const onSubmitReset = data => {\n    setMsg(\"\");\n    setIsSending(true);\n    authService.forgotPassword(data.email).then(data => {\n      if (data.data.status === \"OK\") {\n        setIsSending(false);\n        toast.success(\"Email has been sent successfully.\");\n        setIsOpen(false);\n      }\n    }).catch(error => {\n      setIsSending(false);\n      setMsg(error.response.data.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isOpen && /*#__PURE__*/_jsxDEV(Backdrop, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setIsOpen(!isOpen),\n        className: \"mb-1 text-sm text-purple-700 cursor-pointer\",\n        children: \"Forgot password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpen,\n        onClose: toggleModal,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmitReset),\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            children: \"Forgot Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"email\",\n                className: \"mt-1 border py-2 pl-2\",\n                valid: true,\n                type: \"email\",\n                inputMode: \"email\",\n                ref: register({\n                  required: \"Email required\",\n                  pattern: {\n                    // eslint-disable-next-line no-useless-escape\n                    value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n                    message: \"Email not valid\"\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), errors.email && errors.email.type === \"required\" && /*#__PURE__*/_jsxDEV(HelperText, {\n              className: \"mt-2\",\n              valid: false,\n              children: errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), errors.email && errors.email.type === \"pattern\" && /*#__PURE__*/_jsxDEV(HelperText, {\n              className: \"mt-2\",\n              valid: false,\n              children: errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), msg && /*#__PURE__*/_jsxDEV(HelperText, {\n              className: \"mt-2\",\n              valid: false,\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSubmit(onSubmitReset),\n              disabled: isSending,\n              className: \"w-full sm:w-auto\",\n              children: isSending ? /*#__PURE__*/_jsxDEV(PulseLoader, {\n                size: 10,\n                color: \"#0a138b\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this) : \"Send email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgotPasswordModal, \"Bb0uLLlml/0/scOOmntoynMa3l8=\", false, function () {\n  return [useForm];\n});\n\n_c = ForgotPasswordModal;\nexport default ForgotPasswordModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPasswordModal\");","map":{"version":3,"sources":["/Users/xiaxiaoyu/Desktop/javascript/DBSM_phone/PHONE_STORE_FE/src/components/ForgotPasswordModal.jsx"],"names":["Backdrop","Button","HelperText","Input","Label","Modal","ModalBody","ModalFooter","ModalHeader","React","useState","toast","authService","PulseLoader","useForm","ForgotPasswordModal","isOpen","setIsOpen","msg","setMsg","isSending","setIsSending","handleSubmit","register","errors","toggleModal","onSubmitReset","data","forgotPassword","email","then","status","success","catch","error","response","message","required","pattern","value","type"],"mappings":"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","sourcesContent":["import {\r\n  Backdrop,\r\n  Button,\r\n  HelperText,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n} from \"@windmill/react-ui\";\r\nimport React, { useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport authService from \"services/auth.service\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst ForgotPasswordModal = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [isSending, setIsSending] = useState(false);\r\n  const { handleSubmit, register, errors } = useForm();\r\n\r\n  const toggleModal = () => {\r\n    setMsg(\"\");\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const onSubmitReset = (data) => {\r\n    setMsg(\"\");\r\n    setIsSending(true);\r\n    authService\r\n      .forgotPassword(data.email)\r\n      .then((data) => {\r\n        if (data.data.status === \"OK\") {\r\n          setIsSending(false);\r\n          toast.success(\"Email has been sent successfully.\");\r\n          setIsOpen(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setIsSending(false);\r\n        setMsg(error.response.data.message);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <>\r\n        {isOpen && <Backdrop />}\r\n        <span\r\n          onClick={() => setIsOpen(!isOpen)}\r\n          className=\"mb-1 text-sm text-purple-700 cursor-pointer\"\r\n        >\r\n          Forgot password?\r\n        </span>\r\n        <Modal isOpen={isOpen} onClose={toggleModal}>\r\n          <form onSubmit={handleSubmit(onSubmitReset)}>\r\n            <ModalHeader>Forgot Password</ModalHeader>\r\n            <ModalBody>\r\n              <Label>\r\n                <span className=\"font-semibold\">Email</span>\r\n                <Input\r\n                  name=\"email\"\r\n                  className=\"mt-1 border py-2 pl-2\"\r\n                  valid\r\n                  type=\"email\"\r\n                  inputMode=\"email\"\r\n                  ref={register({\r\n                    required: \"Email required\",\r\n                    pattern: {\r\n                      // eslint-disable-next-line no-useless-escape\r\n                      value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\r\n                      message: \"Email not valid\",\r\n                    },\r\n                  })}\r\n                />\r\n              </Label>\r\n              {errors.email && errors.email.type === \"required\" && (\r\n                <HelperText className=\"mt-2\" valid={false}>\r\n                  {errors.email.message}\r\n                </HelperText>\r\n              )}\r\n              {errors.email && errors.email.type === \"pattern\" && (\r\n                <HelperText className=\"mt-2\" valid={false}>\r\n                  {errors.email.message}\r\n                </HelperText>\r\n              )}\r\n              {msg && (\r\n                <HelperText className=\"mt-2\" valid={false}>\r\n                  {msg}\r\n                </HelperText>\r\n              )}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                onClick={handleSubmit(onSubmitReset)}\r\n                disabled={isSending}\r\n                className=\"w-full sm:w-auto\"\r\n              >\r\n                {isSending ? (\r\n                  <PulseLoader size={10} color={\"#0a138b\"} />\r\n                ) : (\r\n                  \"Send email\"\r\n                )}\r\n              </Button>\r\n            </ModalFooter>\r\n          </form>\r\n        </Modal>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordModal;\r\n"]},"metadata":{},"sourceType":"module"}