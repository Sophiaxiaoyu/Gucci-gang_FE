{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/xiaxiaoyu/Desktop/javascript/PHONE_STORE_FE/src/context/UserContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport API from \"api/axios.config\";\nimport WithAxios from \"helpers/WithAxios\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport authService from \"services/auth.service\";\nconst UserContext = /*#__PURE__*/createContext();\n\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n\n  const [userData, setUserData] = useState(null);\n  const [authData, setAuthData] = useState({\n    token: \"\"\n  });\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    if (isLoggedIn) {\n      authService.getCurrentUser().then(res => setUserData(res === null || res === void 0 ? void 0 : res.data));\n    }\n  }, [isLoggedIn]);\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setIsLoggedIn(true);\n      setAuthData(JSON.parse(localStorage.getItem(\"token\")));\n    }\n  }, []);\n\n  const updateUserData = async ({\n    fullname,\n    email,\n    username,\n    address,\n    city,\n    state,\n    country\n  }) => {\n    const res = await API.put(`/users/${userData.user_id}`, {\n      fullname,\n      email,\n      username,\n      address,\n      city,\n      state,\n      country\n    });\n    setUserData(res.data);\n  };\n\n  const setUserInfo = data => {\n    const {\n      user,\n      token\n    } = data;\n    setIsLoggedIn(true);\n    setUserData(user);\n    setAuthData({\n      token\n    });\n    localStorage.setItem(\"token\", JSON.stringify(token));\n  };\n\n  const logout = () => {\n    setUserData(null);\n    setAuthData(null);\n    setIsLoggedIn(false);\n    authService.logout();\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      userData,\n      setUserData,\n      setUserState: data => setUserInfo(data),\n      logout,\n      isLoggedIn,\n      setIsLoggedIn,\n      authData,\n      setAuthData,\n      updateUserData\n    },\n    children: /*#__PURE__*/_jsxDEV(WithAxios, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProvider, \"o9UTtARBZBUoTWZnWdXsNbMKBtk=\");\n\n_c = UserProvider;\n\nconst useUser = () => {\n  _s2();\n\n  const context = useContext(UserContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUser must be used within UserProvider\");\n  }\n\n  return context;\n};\n\n_s2(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { UserProvider, useUser };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/Users/xiaxiaoyu/Desktop/javascript/PHONE_STORE_FE/src/context/UserContext.jsx"],"names":["API","WithAxios","React","createContext","useContext","useEffect","useState","authService","UserContext","UserProvider","children","userData","setUserData","authData","setAuthData","token","isLoggedIn","setIsLoggedIn","getCurrentUser","then","res","data","localStorage","getItem","JSON","parse","updateUserData","fullname","email","username","address","city","state","country","put","user_id","setUserInfo","user","setItem","stringify","logout","setUserState","useUser","context","undefined","Error"],"mappings":"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","sourcesContent":["import API from \"api/axios.config\";\r\nimport WithAxios from \"helpers/WithAxios\";\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport authService from \"services/auth.service\";\r\n\r\nconst UserContext = createContext();\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [authData, setAuthData] = useState({\r\n    token: \"\",\r\n  });\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      authService.getCurrentUser().then((res) => setUserData(res?.data));\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      setIsLoggedIn(true);\r\n      setAuthData(JSON.parse(localStorage.getItem(\"token\")));\r\n    }\r\n  }, []);\r\n\r\n  const updateUserData = async ({\r\n    fullname,\r\n    email,\r\n    username,\r\n    address,\r\n    city,\r\n    state,\r\n    country,\r\n  }) => {\r\n    const res = await API.put(`/users/${userData.user_id}`, {\r\n      fullname,\r\n      email,\r\n      username,\r\n      address,\r\n      city,\r\n      state,\r\n      country,\r\n    });\r\n    setUserData(res.data);\r\n  };\r\n\r\n  const setUserInfo = (data) => {\r\n    const { user, token } = data;\r\n    setIsLoggedIn(true);\r\n    setUserData(user);\r\n    setAuthData({\r\n      token\r\n    });\r\n    localStorage.setItem(\"token\", JSON.stringify(token));\r\n  };\r\n\r\n  const logout = () => {\r\n    setUserData(null);\r\n    setAuthData(null);\r\n    setIsLoggedIn(false);\r\n    authService.logout();\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        userData,\r\n        setUserData,\r\n        setUserState: (data) => setUserInfo(data),\r\n        logout,\r\n        isLoggedIn,\r\n        setIsLoggedIn,\r\n        authData,\r\n        setAuthData,\r\n        updateUserData,\r\n      }}\r\n    >\r\n      <WithAxios>{children}</WithAxios>\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nconst useUser = () => {\r\n  const context = useContext(UserContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error(\"useUser must be used within UserProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport { UserProvider, useUser };\r\n"]},"metadata":{},"sourceType":"module"}