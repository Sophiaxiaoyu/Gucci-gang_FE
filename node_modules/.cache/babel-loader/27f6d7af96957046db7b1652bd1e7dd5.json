{"ast":null,"code":"import { filter, isNil, isNumber, last } from '@antv/util';\n/**\n * 计算分类 ticks\n * @param cfg 度量的配置项\n * @returns 计算后的 ticks\n */\n\nexport default function calculateCatTicks(cfg) {\n  var values = cfg.values,\n      tickInterval = cfg.tickInterval,\n      tickCount = cfg.tickCount,\n      showLast = cfg.showLast;\n\n  if (isNumber(tickInterval)) {\n    var ticks_1 = filter(values, function (__, i) {\n      return i % tickInterval === 0;\n    });\n    var lastValue = last(values);\n\n    if (showLast && last(ticks_1) !== lastValue) {\n      ticks_1.push(lastValue);\n    }\n\n    return ticks_1;\n  }\n\n  var len = values.length;\n  var min = cfg.min,\n      max = cfg.max;\n\n  if (isNil(min)) {\n    min = 0;\n  }\n\n  if (isNil(max)) {\n    max = values.length - 1;\n  }\n\n  if (!isNumber(tickCount) || tickCount >= len) return values.slice(min, max + 1);\n  if (tickCount <= 0 || max <= 0) return [];\n  var interval = tickCount === 1 ? len : Math.floor(len / (tickCount - 1));\n  var ticks = [];\n  var idx = min;\n\n  for (var i = 0; i < tickCount; i++) {\n    if (idx >= max) break;\n    idx = Math.min(min + i * interval, max);\n    if (i === tickCount - 1 && showLast) ticks.push(values[max]);else ticks.push(values[idx]);\n  }\n\n  return ticks;\n}","map":{"version":3,"sources":["../../src/tick-method/cat.ts"],"names":[],"mappings":"AAAA,SAAS,MAAT,EAAiB,KAAjB,EAAwB,QAAxB,EAAkC,IAAlC,QAA8C,YAA9C;AAGA;;;;AAIG;;AACH,eAAc,SAAU,iBAAV,CAA4B,GAA5B,EAA4C;AAChD,MAAA,MAAM,GAAwC,GAAG,CAA3C,MAAN;AAAA,MAAQ,YAAY,GAA0B,GAAG,CAA7B,YAApB;AAAA,MAAsB,SAAS,GAAe,GAAG,CAAlB,SAA/B;AAAA,MAAiC,QAAQ,GAAK,GAAG,CAAR,QAAzC;;AAER,MAAI,QAAQ,CAAC,YAAD,CAAZ,EAA4B;AAC1B,QAAM,OAAK,GAAG,MAAM,CAAC,MAAD,EAAS,UAAC,EAAD,EAAU,CAAV,EAAmB;AAAK,aAAA,CAAC,GAAG,YAAJ,KAAA,CAAA;AAAsB,KAAvD,CAApB;AACA,QAAM,SAAS,GAAG,IAAI,CAAC,MAAD,CAAtB;;AACA,QAAI,QAAQ,IAAI,IAAI,CAAC,OAAD,CAAJ,KAAgB,SAAhC,EAA2C;AACzC,MAAA,OAAK,CAAC,IAAN,CAAW,SAAX;AACD;;AACD,WAAO,OAAP;AACD;;AAED,MAAM,GAAG,GAAG,MAAM,CAAC,MAAnB;AACM,MAAA,GAAG,GAAU,GAAG,CAAb,GAAH;AAAA,MAAK,GAAG,GAAK,GAAG,CAAR,GAAR;;AACN,MAAI,KAAK,CAAC,GAAD,CAAT,EAAgB;AACd,IAAA,GAAG,GAAG,CAAN;AACD;;AACD,MAAI,KAAK,CAAC,GAAD,CAAT,EAAgB;AACd,IAAA,GAAG,GAAG,MAAM,CAAC,MAAP,GAAgB,CAAtB;AACD;;AAED,MAAI,CAAC,QAAQ,CAAC,SAAD,CAAT,IAAwB,SAAS,IAAI,GAAzC,EAA8C,OAAO,MAAM,CAAC,KAAP,CAAa,GAAb,EAAkB,GAAG,GAAG,CAAxB,CAAP;AAC9C,MAAI,SAAS,IAAI,CAAb,IAAkB,GAAG,IAAI,CAA7B,EAAgC,OAAO,EAAP;AAEhC,MAAM,QAAQ,GAAG,SAAS,KAAK,CAAd,GAAkB,GAAlB,GAAwB,IAAI,CAAC,KAAL,CAAW,GAAG,IAAI,SAAS,GAAG,CAAhB,CAAd,CAAzC;AACA,MAAM,KAAK,GAAG,EAAd;AAEA,MAAI,GAAG,GAAG,GAAV;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAApB,EAA+B,CAAC,EAAhC,EAAoC;AAClC,QAAI,GAAG,IAAI,GAAX,EAAgB;AAEhB,IAAA,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,GAAG,GAAG,CAAC,GAAG,QAAnB,EAA6B,GAA7B,CAAN;AACA,QAAI,CAAC,KAAK,SAAS,GAAG,CAAlB,IAAuB,QAA3B,EAAqC,KAAK,CAAC,IAAN,CAAW,MAAM,CAAC,GAAD,CAAjB,EAArC,KACK,KAAK,CAAC,IAAN,CAAW,MAAM,CAAC,GAAD,CAAjB;AACN;;AACD,SAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["import { filter, isNil, isNumber, last } from '@antv/util';\n/**\n * 计算分类 ticks\n * @param cfg 度量的配置项\n * @returns 计算后的 ticks\n */\nexport default function calculateCatTicks(cfg) {\n    var values = cfg.values, tickInterval = cfg.tickInterval, tickCount = cfg.tickCount, showLast = cfg.showLast;\n    if (isNumber(tickInterval)) {\n        var ticks_1 = filter(values, function (__, i) { return i % tickInterval === 0; });\n        var lastValue = last(values);\n        if (showLast && last(ticks_1) !== lastValue) {\n            ticks_1.push(lastValue);\n        }\n        return ticks_1;\n    }\n    var len = values.length;\n    var min = cfg.min, max = cfg.max;\n    if (isNil(min)) {\n        min = 0;\n    }\n    if (isNil(max)) {\n        max = values.length - 1;\n    }\n    if (!isNumber(tickCount) || tickCount >= len)\n        return values.slice(min, max + 1);\n    if (tickCount <= 0 || max <= 0)\n        return [];\n    var interval = tickCount === 1 ? len : Math.floor(len / (tickCount - 1));\n    var ticks = [];\n    var idx = min;\n    for (var i = 0; i < tickCount; i++) {\n        if (idx >= max)\n            break;\n        idx = Math.min(min + i * interval, max);\n        if (i === tickCount - 1 && showLast)\n            ticks.push(values[max]);\n        else\n            ticks.push(values[idx]);\n    }\n    return ticks;\n}\n//# sourceMappingURL=cat.js.map"]},"metadata":{},"sourceType":"module"}