{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/xiaxiaoyu/Desktop/javascript/PHONE_STORE_FE/src/components/PaymentForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Button, HelperText } from \"@windmill/react-ui\";\nimport API from \"api/axios.config\";\nimport { useCart } from \"context/CartContext\";\nimport toast from \"react-hot-toast\";\nimport { formatCurrency } from \"helpers/formatCurrency\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport OrderService from \"services/order.service\";\nimport OrderSummary from \"./OrderSummary\";\nimport PaystackBtn from \"./PaystackBtn\";\n\nconst PaymentForm = ({\n  previousStep,\n  addressData,\n  nextStep\n}) => {\n  _s();\n\n  const {\n    cartSubtotal,\n    cartTotal,\n    cartData,\n    setCartData\n  } = useCart();\n  const [error, setError] = useState();\n  const [isProcessing, setIsProcessing] = useState(false); // const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUB_KEY);\n\n  const history = useHistory();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError();\n\n    try {\n      setIsProcessing(true);\n      const {\n        fullname,\n        email,\n        address,\n        city,\n        state\n      } = addressData; // Mock payment\n\n      const data = {\n        id: uuidv4(),\n        amount: (cartSubtotal * 100).toFixed(),\n        billing_details: {\n          name: fullname,\n          email,\n          address: {\n            city,\n            line1: address,\n            state,\n            country: \"NG\" // TODO: change later\n\n          }\n        }\n      };\n      OrderService.createOrder(cartSubtotal, cartTotal, data.id, \"STRIPE\").then(() => {\n        setCartData({ ...cartData,\n          items: []\n        });\n        setIsProcessing(false);\n        toast.success(\"Successfully paied\");\n        history.push({\n          pathname: \"/cart/success\",\n          state: {\n            fromPaymentPage: true\n          }\n        });\n      });\n    } catch (error) {\n      setIsProcessing(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full md:w-1/2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-semibold text-center mb-2\",\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(OrderSummary, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: isProcessing,\n      onClick: handleSubmit,\n      className: \"w-full\",\n      children: [\"Pay $\", formatCurrency(cartSubtotal)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n};\n\n_s(PaymentForm, \"CJspq1BLbpmcU+45cGGpaLEykTw=\", false, function () {\n  return [useCart, useHistory];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/Users/xiaxiaoyu/Desktop/javascript/PHONE_STORE_FE/src/components/PaymentForm.jsx"],"names":["v4","uuidv4","Button","HelperText","API","useCart","toast","formatCurrency","React","useState","useHistory","PulseLoader","OrderService","OrderSummary","PaystackBtn","PaymentForm","previousStep","addressData","nextStep","cartSubtotal","cartTotal","cartData","setCartData","error","setError","isProcessing","setIsProcessing","history","handleSubmit","e","preventDefault","fullname","email","address","city","state","data","id","amount","toFixed","billing_details","name","line1","country","createOrder","then","items","success","push","pathname","fromPaymentPage"],"mappings":";;;;;AAAA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,oBAAnC;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,WAAhB;AAA6BC,EAAAA;AAA7B,CAAD,KAA6C;AAAA;;AAChE,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA,QAA3B;AAAqCC,IAAAA;AAArC,MAAqDjB,OAAO,EAAlE;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,EAAlC;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,KAAD,CAAhD,CAHgE,CAIhE;;AACA,QAAMkB,OAAO,GAAGjB,UAAU,EAA1B;;AAEA,QAAMkB,YAAY,GAAG,MAAOC,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,QAAQ;;AACR,QAAI;AACHE,MAAAA,eAAe,CAAC,IAAD,CAAf;AACA,YAAM;AAAEK,QAAAA,QAAF;AAAYC,QAAAA,KAAZ;AAAmBC,QAAAA,OAAnB;AAA4BC,QAAAA,IAA5B;AAAkCC,QAAAA;AAAlC,UAA4ClB,WAAlD,CAFG,CAIH;;AACA,YAAMmB,IAAI,GAAG;AACZC,QAAAA,EAAE,EAAEpC,MAAM,EADE;AAEZqC,QAAAA,MAAM,EAAE,CAACnB,YAAY,GAAG,GAAhB,EAAqBoB,OAArB,EAFI;AAGZC,QAAAA,eAAe,EAAE;AAChBC,UAAAA,IAAI,EAAEV,QADU;AAEhBC,UAAAA,KAFgB;AAGhBC,UAAAA,OAAO,EAAE;AACRC,YAAAA,IADQ;AAERQ,YAAAA,KAAK,EAAET,OAFC;AAGRE,YAAAA,KAHQ;AAIRQ,YAAAA,OAAO,EAAE,IAJD,CAIO;;AAJP;AAHO;AAHL,OAAb;AAeA/B,MAAAA,YAAY,CAACgC,WAAb,CAAyBzB,YAAzB,EAAuCC,SAAvC,EAAkDgB,IAAI,CAACC,EAAvD,EAA2D,QAA3D,EAAqEQ,IAArE,CACC,MAAM;AACLvB,QAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeyB,UAAAA,KAAK,EAAE;AAAtB,SAAD,CAAX;AACApB,QAAAA,eAAe,CAAC,KAAD,CAAf;AACApB,QAAAA,KAAK,CAACyC,OAAN,CAAc,oBAAd;AACApB,QAAAA,OAAO,CAACqB,IAAR,CAAa;AACZC,UAAAA,QAAQ,EAAE,eADE;AAEZd,UAAAA,KAAK,EAAE;AACNe,YAAAA,eAAe,EAAE;AADX;AAFK,SAAb;AAMA,OAXF;AAaA,KAjCD,CAiCE,OAAO3B,KAAP,EAAc;AACfG,MAAAA,eAAe,CAAC,KAAD,CAAf;AACA;AACD,GAvCD;;AAyCA,sBACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,yCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAED,YAAlB;AAAgC,MAAA,OAAO,EAAEG,YAAzC;AAAuD,MAAA,SAAS,EAAC,QAAjE;AAAA,0BACOrB,cAAc,CAACY,YAAD,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAwCA,CAxFD;;GAAMJ,W;UACsDV,O,EAI3CK,U;;;KALXK,W;AA0FN,eAAeA,WAAf","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport { Button, HelperText } from \"@windmill/react-ui\";\nimport API from \"api/axios.config\";\nimport { useCart } from \"context/CartContext\";\nimport toast from \"react-hot-toast\";\nimport { formatCurrency } from \"helpers/formatCurrency\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport OrderService from \"services/order.service\";\nimport OrderSummary from \"./OrderSummary\";\nimport PaystackBtn from \"./PaystackBtn\";\n\nconst PaymentForm = ({ previousStep, addressData, nextStep }) => {\n\tconst { cartSubtotal, cartTotal, cartData, setCartData } = useCart();\n\tconst [error, setError] = useState();\n\tconst [isProcessing, setIsProcessing] = useState(false);\n\t// const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUB_KEY);\n\tconst history = useHistory();\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tsetError();\n\t\ttry {\n\t\t\tsetIsProcessing(true);\n\t\t\tconst { fullname, email, address, city, state } = addressData;\n\n\t\t\t// Mock payment\n\t\t\tconst data = {\n\t\t\t\tid: uuidv4(),\n\t\t\t\tamount: (cartSubtotal * 100).toFixed(),\n\t\t\t\tbilling_details: {\n\t\t\t\t\tname: fullname,\n\t\t\t\t\temail,\n\t\t\t\t\taddress: {\n\t\t\t\t\t\tcity,\n\t\t\t\t\t\tline1: address,\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\tcountry: \"NG\", // TODO: change later\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tOrderService.createOrder(cartSubtotal, cartTotal, data.id, \"STRIPE\").then(\n\t\t\t\t() => {\n\t\t\t\t\tsetCartData({ ...cartData, items: [] });\n\t\t\t\t\tsetIsProcessing(false);\n\t\t\t\t\ttoast.success(\"Successfully paied\");\n\t\t\t\t\thistory.push({\n\t\t\t\t\t\tpathname: \"/cart/success\",\n\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\tfromPaymentPage: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tsetIsProcessing(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"w-full md:w-1/2\">\n\t\t\t<h1 className=\"text-3xl font-semibold text-center mb-2\">Checkout</h1>\n\t\t\t<OrderSummary />\n\t\t\t<Button disabled={isProcessing} onClick={handleSubmit} className=\"w-full\">\n\t\t\t\tPay ${formatCurrency(cartSubtotal)}\n\t\t\t</Button>\n\t\t\t{/* <h1 className=\"font-medium text-2xl\">Pay with Stripe</h1> */}\n\t\t\t{/* <Elements stripe={stripePromise}>\n\t\t\t\t<ElementsConsumer>\n\t\t\t\t\t{({ stripe, elements }) => (\n\t\t\t\t\t\t<form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\n\t\t\t\t\t\t\t<CardElement className=\"border py-2\" />\n\t\t\t\t\t\t\t{error && <HelperText valid={false}>{error.message}</HelperText>}\n\t\t\t\t\t\t\t<div className=\"flex justify-between py-4\">\n\t\t\t\t\t\t\t\t<Button onClick={previousStep} layout=\"outline\" size=\"small\">\n\t\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={!stripe || isProcessing}\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{isProcessing || !stripe ? (\n\t\t\t\t\t\t\t\t\t\t<PulseLoader size={10} color={\"#0a138b\"} />\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t`Pay ${formatCurrency(cartSubtotal)}`\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t)}\n\t\t\t\t</ElementsConsumer>\n\t\t\t</Elements> */}\n\t\t\t{/* <PaystackBtn\n\t\t\t\tisProcessing={isProcessing}\n\t\t\t\tsetIsProcessing={setIsProcessing}\n\t\t\t/> */}\n\t\t</div>\n\t);\n};\n\nexport default PaymentForm;\n"]},"metadata":{},"sourceType":"module"}