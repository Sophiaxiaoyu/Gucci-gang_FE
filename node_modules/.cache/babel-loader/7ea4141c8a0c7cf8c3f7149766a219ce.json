{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/xiaxiaoyu/Desktop/javascript/dbms project/PHONE_STORE_FE/src/context/CartContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport localCart from \"helpers/localStorage\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport cartService from \"services/cart.service\";\nimport { useUser } from \"./UserContext\";\nconst CartContext = /*#__PURE__*/createContext();\n\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n\n  const [cartData, setCartData] = useState();\n  const [cartSubtotal, setCartSubtotal] = useState(0);\n  const [cartTotal, setCartTotal] = useState(0);\n  const {\n    isLoggedIn\n  } = useUser();\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n\n    if (isLoggedIn) {\n      const saveLocalCart = async () => {\n        const cartObj = localCart.getItems().map(({\n          product_id,\n          quantity\n        }) => cartService.addToCart(product_id, quantity));\n        await Promise.all(cartObj);\n        localCart.clearCart();\n        cartService.getCart().then(res => {\n          setCartData(res === null || res === void 0 ? void 0 : res.data);\n          setIsLoading(false);\n        });\n      };\n\n      saveLocalCart();\n    } else {\n      const items = localCart.getItems();\n\n      if (items === null) {\n        return;\n      }\n\n      setCartData({\n        items: [...items]\n      });\n      setIsLoading(false);\n    }\n  }, [isLoggedIn]);\n  useEffect(() => {\n    var _cartData$items;\n\n    const quantity = cartData === null || cartData === void 0 ? void 0 : (_cartData$items = cartData.items) === null || _cartData$items === void 0 ? void 0 : _cartData$items.reduce((acc, cur) => {\n      return acc + Number(cur.quantity);\n    }, 0);\n    const totalAmt = cartData === null || cartData === void 0 ? void 0 : cartData.items.reduce((acc, cur) => {\n      return acc + Number(cur.subtotal);\n    }, 0);\n    setCartSubtotal(totalAmt);\n    setCartTotal(quantity);\n  }, [cartData]);\n\n  const addItem = async (product, quantity) => {\n    if (isLoggedIn) {\n      try {\n        const {\n          data\n        } = await cartService.addToCart(product.product_id, quantity);\n        setCartData({\n          items: [...data.data]\n        });\n      } catch (error) {\n        return error;\n      }\n    } else {\n      localCart.addItem(product, 1);\n      setCartData({ ...cartData,\n        items: localCart.getItems()\n      });\n    }\n  };\n\n  const deleteItem = product_id => {\n    if (isLoggedIn) {\n      const {\n        items\n      } = cartData;\n      cartService.removeFromCart(product_id).then(() => {\n        const data = items.filter(item => item.product_id !== product_id);\n        setCartData({ ...cartData,\n          items: data\n        });\n      });\n    } else {\n      localCart.removeItem(product_id);\n      setCartData({ ...cartData,\n        items: localCart.getItems()\n      });\n    }\n  };\n\n  const increment = async product_id => {\n    if (isLoggedIn) {\n      const res = await cartService.increment(product_id);\n      setCartData({ ...cartData,\n        items: res.data\n      });\n      return res;\n    } else {\n      localCart.incrementQuantity(product_id);\n      setCartData({ ...cartData,\n        items: localCart.getItems()\n      });\n    }\n  };\n\n  const decrement = async product_id => {\n    if (isLoggedIn) {\n      const res = await cartService.decrement(product_id);\n      setCartData({ ...cartData,\n        items: res.data\n      });\n      return res;\n    } else {\n      localCart.decrementQuantity(product_id);\n      setCartData({ ...cartData,\n        items: localCart.getItems()\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      isLoading,\n      cartData,\n      setCartData,\n      addItem,\n      deleteItem,\n      increment,\n      decrement,\n      cartTotal,\n      cartSubtotal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"kWaFs6isB8M/+dVWuvkAplyN+Bs=\", false, function () {\n  return [useUser];\n});\n\n_c = CartProvider;\n\nconst useCart = () => {\n  _s2();\n\n  const context = useContext(CartContext);\n\n  if (context === undefined) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n\n  return context;\n};\n\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { CartProvider, useCart };\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/xiaxiaoyu/Desktop/javascript/dbms project/PHONE_STORE_FE/src/context/CartContext.jsx"],"names":["localCart","React","createContext","useContext","useEffect","useState","cartService","useUser","CartContext","CartProvider","children","cartData","setCartData","cartSubtotal","setCartSubtotal","cartTotal","setCartTotal","isLoggedIn","isLoading","setIsLoading","saveLocalCart","cartObj","getItems","map","product_id","quantity","addToCart","Promise","all","clearCart","getCart","then","res","data","items","reduce","acc","cur","Number","totalAmt","subtotal","addItem","product","error","deleteItem","removeFromCart","filter","item","removeItem","increment","incrementQuantity","decrement","decrementQuantity","useCart","context","undefined","Error"],"mappings":"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","sourcesContent":["import localCart from \"helpers/localStorage\";\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport cartService from \"services/cart.service\";\r\nimport { useUser } from \"./UserContext\";\r\n\r\nconst CartContext = createContext();\r\n\r\nconst CartProvider = ({ children }) => {\r\n  const [cartData, setCartData] = useState();\r\n  const [cartSubtotal, setCartSubtotal] = useState(0);\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const { isLoggedIn } = useUser();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    if (isLoggedIn) {\r\n      const saveLocalCart = async () => {\r\n        const cartObj = localCart\r\n          .getItems()\r\n          .map(({ product_id, quantity }) =>\r\n            cartService.addToCart(product_id, quantity)\r\n          );\r\n        await Promise.all(cartObj);\r\n        localCart.clearCart();\r\n        cartService.getCart().then((res) => {\r\n          setCartData(res?.data);\r\n          setIsLoading(false);\r\n        });\r\n      };\r\n      saveLocalCart();\r\n    } else {\r\n      const items = localCart.getItems();\r\n      if (items === null) {\r\n        return;\r\n      }\r\n      setCartData({ items: [...items] });\r\n      setIsLoading(false);\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  useEffect(() => {\r\n    const quantity = cartData?.items?.reduce((acc, cur) => {\r\n      return acc + Number(cur.quantity);\r\n    }, 0);\r\n    const totalAmt = cartData?.items.reduce((acc, cur) => {\r\n      return acc + Number(cur.subtotal);\r\n    }, 0);\r\n    setCartSubtotal(totalAmt);\r\n    setCartTotal(quantity);\r\n  }, [cartData]);\r\n\r\n  const addItem = async (product, quantity) => {\r\n    if (isLoggedIn) {\r\n      try {\r\n        const { data } = await cartService.addToCart(\r\n          product.product_id,\r\n          quantity\r\n        );\r\n        setCartData({ items: [...data.data] });\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n    } else {\r\n      localCart.addItem(product, 1);\r\n      setCartData({ ...cartData, items: localCart.getItems() });\r\n    }\r\n  };\r\n\r\n  const deleteItem = (product_id) => {\r\n    if (isLoggedIn) {\r\n      const { items } = cartData;\r\n      cartService.removeFromCart(product_id).then(() => {\r\n        const data = items.filter((item) => item.product_id !== product_id);\r\n        setCartData({ ...cartData, items: data });\r\n      });\r\n    } else {\r\n      localCart.removeItem(product_id);\r\n      setCartData({ ...cartData, items: localCart.getItems() });\r\n    }\r\n  };\r\n\r\n  const increment = async (product_id) => {\r\n    if (isLoggedIn) {\r\n      const res = await cartService.increment(product_id);\r\n      setCartData({ ...cartData, items: res.data });\r\n      return res;\r\n    } else {\r\n      localCart.incrementQuantity(product_id);\r\n      setCartData({ ...cartData, items: localCart.getItems() });\r\n    }\r\n  };\r\n\r\n  const decrement = async (product_id) => {\r\n    if (isLoggedIn) {\r\n      const res = await cartService.decrement(product_id);\r\n      setCartData({ ...cartData, items: res.data });\r\n      return res;\r\n    } else {\r\n      localCart.decrementQuantity(product_id);\r\n      setCartData({ ...cartData, items: localCart.getItems() });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        isLoading,\r\n        cartData,\r\n        setCartData,\r\n        addItem,\r\n        deleteItem,\r\n        increment,\r\n        decrement,\r\n        cartTotal,\r\n        cartSubtotal,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nconst useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useCart must be used within a CartProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport { CartProvider, useCart };\r\n"]},"metadata":{},"sourceType":"module"}