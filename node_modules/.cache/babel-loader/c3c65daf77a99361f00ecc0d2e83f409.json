{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/xiaxiaoyu/Desktop/javascript/PHONE_STORE_FE/src/components/PaymentForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { CardElement, Elements, ElementsConsumer } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Button, HelperText } from \"@windmill/react-ui\";\nimport API from \"api/axios.config\";\nimport { useCart } from \"context/CartContext\";\nimport { formatCurrency } from \"helpers/formatCurrency\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport OrderService from \"services/order.service\";\nimport OrderSummary from \"./OrderSummary\";\nimport PaystackBtn from \"./PaystackBtn\";\n\nconst PaymentForm = ({\n  previousStep,\n  addressData,\n  nextStep\n}) => {\n  _s();\n\n  const {\n    cartSubtotal,\n    cartTotal,\n    cartData,\n    setCartData\n  } = useCart();\n  const [error, setError] = useState();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUB_KEY);\n  const history = useHistory();\n\n  const handleSubmit = async (e, elements, stripe) => {\n    e.preventDefault();\n    setError();\n    const {\n      fullname,\n      email,\n      address,\n      city,\n      state\n    } = addressData;\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    try {\n      setIsProcessing(true);\n      const {\n        data\n      } = await API.post(\"/payment\", {\n        amount: (cartSubtotal * 100).toFixed(),\n        email\n      });\n      const card = elements.getElement(CardElement);\n      const result = await stripe.createPaymentMethod({\n        type: \"card\",\n        card,\n        billing_details: {\n          name: fullname,\n          email,\n          address: {\n            city,\n            line1: address,\n            state,\n            country: \"NG\" // TODO: change later\n\n          }\n        }\n      });\n\n      if (result.error) {\n        setError(result.error);\n      }\n\n      await stripe.confirmCardPayment(data.client_secret, {\n        payment_method: result.paymentMethod.id\n      });\n      OrderService.createOrder(cartSubtotal, cartTotal, data.id, \"STRIPE\").then(() => {\n        setCartData({ ...cartData,\n          items: []\n        });\n        setIsProcessing(false);\n        history.push({\n          pathname: \"/cart/success\",\n          state: {\n            fromPaymentPage: true\n          }\n        });\n      });\n    } catch (error) {\n      setIsProcessing(false); // throw error\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full md:w-1/2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-semibold text-center mb-2\",\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderSummary, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"font-medium text-2xl\",\n      children: \"Pay with Stripe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Elements, {\n      stripe: stripePromise,\n      children: /*#__PURE__*/_jsxDEV(ElementsConsumer, {\n        children: ({\n          stripe,\n          elements\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleSubmit(e, elements, stripe),\n          children: [/*#__PURE__*/_jsxDEV(CardElement, {\n            className: \"border py-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(HelperText, {\n            valid: false,\n            children: error.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between py-4\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: previousStep,\n              layout: \"outline\",\n              size: \"small\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: !stripe || isProcessing,\n              type: \"submit\",\n              size: \"small\",\n              children: isProcessing || !stripe ? /*#__PURE__*/_jsxDEV(PulseLoader, {\n                size: 10,\n                color: \"#0a138b\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this) : `Pay ${formatCurrency(cartSubtotal)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaystackBtn, {\n      isProcessing: isProcessing,\n      setIsProcessing: setIsProcessing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentForm, \"CJspq1BLbpmcU+45cGGpaLEykTw=\", false, function () {\n  return [useCart, useHistory];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/Users/xiaxiaoyu/Desktop/javascript/PHONE_STORE_FE/src/components/PaymentForm.jsx"],"names":["CardElement","Elements","ElementsConsumer","loadStripe","Button","HelperText","API","useCart","formatCurrency","React","useState","useHistory","PulseLoader","OrderService","OrderSummary","PaystackBtn","PaymentForm","previousStep","addressData","nextStep","cartSubtotal","cartTotal","cartData","setCartData","error","setError","isProcessing","setIsProcessing","stripePromise","process","env","REACT_APP_STRIPE_PUB_KEY","history","handleSubmit","e","elements","stripe","preventDefault","fullname","email","address","city","state","data","post","amount","toFixed","card","getElement","result","createPaymentMethod","type","billing_details","name","line1","country","confirmCardPayment","client_secret","payment_method","paymentMethod","id","createOrder","then","items","push","pathname","fromPaymentPage","message"],"mappings":"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","sourcesContent":["import {\r\n  CardElement,\r\n  Elements,\r\n  ElementsConsumer,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Button, HelperText } from \"@windmill/react-ui\";\r\nimport API from \"api/axios.config\";\r\nimport { useCart } from \"context/CartContext\";\r\nimport { formatCurrency } from \"helpers/formatCurrency\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport OrderService from \"services/order.service\";\r\nimport OrderSummary from \"./OrderSummary\";\r\nimport PaystackBtn from \"./PaystackBtn\";\r\n\r\nconst PaymentForm = ({ previousStep, addressData, nextStep }) => {\r\n  const { cartSubtotal, cartTotal, cartData, setCartData } = useCart();\r\n  const [error, setError] = useState();\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUB_KEY);\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (e, elements, stripe) => {\r\n    e.preventDefault();\r\n    setError();\r\n    const { fullname, email, address, city, state } = addressData;\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n    try {\r\n      setIsProcessing(true);\r\n      const { data } = await API.post(\"/payment\", {\r\n        amount: (cartSubtotal * 100).toFixed(),\r\n        email,\r\n      });\r\n\r\n      const card = elements.getElement(CardElement);\r\n      const result = await stripe.createPaymentMethod({\r\n        type: \"card\",\r\n        card,\r\n        billing_details: {\r\n          name: fullname,\r\n          email,\r\n          address: {\r\n            city,\r\n            line1: address,\r\n            state,\r\n            country: \"NG\", // TODO: change later\r\n          },\r\n        },\r\n      });\r\n      if (result.error) {\r\n        setError(result.error);\r\n      }\r\n\r\n      await stripe.confirmCardPayment(data.client_secret, {\r\n        payment_method: result.paymentMethod.id,\r\n      });\r\n\r\n      OrderService.createOrder(cartSubtotal, cartTotal, data.id, \"STRIPE\").then(\r\n        () => {\r\n          setCartData({ ...cartData, items: [] });\r\n          setIsProcessing(false);\r\n          history.push({\r\n            pathname: \"/cart/success\",\r\n            state: {\r\n              fromPaymentPage: true,\r\n            },\r\n          });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      setIsProcessing(false);\r\n      // throw error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full md:w-1/2\">\r\n      <h1 className=\"text-3xl font-semibold text-center mb-2\">Checkout</h1>\r\n      <OrderSummary />\r\n      <h1 className=\"font-medium text-2xl\">Pay with Stripe</h1>\r\n      <Elements stripe={stripePromise}>\r\n        <ElementsConsumer>\r\n          {({ stripe, elements }) => (\r\n            <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\r\n              <CardElement className=\"border py-2\" />\r\n              {error && <HelperText valid={false}>{error.message}</HelperText>}\r\n              <div className=\"flex justify-between py-4\">\r\n                <Button onClick={previousStep} layout=\"outline\" size=\"small\">\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  disabled={!stripe || isProcessing}\r\n                  type=\"submit\"\r\n                  size=\"small\"\r\n                >\r\n                  {isProcessing || !stripe ? (\r\n                    <PulseLoader size={10} color={\"#0a138b\"} />\r\n                  ) : (\r\n                    `Pay ${formatCurrency(cartSubtotal)}`\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </ElementsConsumer>\r\n      </Elements>\r\n      <PaystackBtn\r\n        isProcessing={isProcessing}\r\n        setIsProcessing={setIsProcessing}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n"]},"metadata":{},"sourceType":"module"}