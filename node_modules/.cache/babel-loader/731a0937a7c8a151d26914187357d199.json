{"ast":null,"code":"import { __values } from \"tslib\";\nimport { groupToMap } from '@antv/util';\n/** @ignore */\n\nexport function group(data, fields, appendConditions) {\n  var e_1, _a;\n\n  if (appendConditions === void 0) {\n    appendConditions = {};\n  }\n\n  if (!fields) {\n    return [data];\n  }\n\n  var groups = groupToMap(data, fields);\n  var array = [];\n\n  if (fields.length === 1 && appendConditions[fields[0]]) {\n    var values = appendConditions[fields[0]];\n\n    try {\n      for (var values_1 = __values(values), values_1_1 = values_1.next(); !values_1_1.done; values_1_1 = values_1.next()) {\n        var value = values_1_1.value;\n        var arr = groups[\"_\".concat(value)];\n\n        if (arr) {\n          // 可能存在用户设置 values ，但是数据中没有对应的字段，则这时候 arr 就为 null\n          array.push(arr);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (values_1_1 && !values_1_1.done && (_a = values_1.return)) _a.call(values_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  } else {\n    for (var k in groups) {\n      if (groups.hasOwnProperty(k)) {\n        var eachGroup = groups[k];\n        array.push(eachGroup);\n      }\n    }\n  }\n\n  return array;\n}","map":{"version":3,"sources":["../../../src/geometry/util/group-data.ts"],"names":[],"mappings":";AAAA,SAAS,UAAT,QAA2B,YAA3B;AAGA;;AACA,OAAM,SAAU,KAAV,CAAgB,IAAhB,EAA4B,MAA5B,EAA8C,gBAA9C,EAA0F;;;AAA5C,MAAA,gBAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,EAAA;AAA4C;;AAC9F,MAAI,CAAC,MAAL,EAAa;AACX,WAAO,CAAC,IAAD,CAAP;AACD;;AACD,MAAM,MAAM,GAAG,UAAU,CAAC,IAAD,EAAO,MAAP,CAAzB;AACA,MAAM,KAAK,GAAG,EAAd;;AACA,MAAI,MAAM,CAAC,MAAP,KAAkB,CAAlB,IAAuB,gBAAgB,CAAC,MAAM,CAAC,CAAD,CAAP,CAA3C,EAAwD;AACtD,QAAM,MAAM,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAD,CAAP,CAA/B;;;AACA,WAAoB,IAAA,QAAA,GAAA,QAAA,CAAA,MAAA,CAAA,EAAM,UAAA,GAAA,QAAA,CAAA,IAAA,EAA1B,EAA0B,CAAA,UAAA,CAAA,IAA1B,EAA0B,UAAA,GAAA,QAAA,CAAA,IAAA,EAA1B,EAA4B;AAAvB,YAAM,KAAK,GAAA,UAAA,CAAA,KAAX;AACH,YAAM,GAAG,GAAG,MAAM,CAAC,IAAA,MAAA,CAAI,KAAJ,CAAD,CAAlB;;AACA,YAAI,GAAJ,EAAS;AACP;AACA,UAAA,KAAK,CAAC,IAAN,CAAW,GAAX;AACD;AACF;;;;;;;;;;;;AACF,GATD,MASO;AACL,SAAK,IAAM,CAAX,IAAgB,MAAhB,EAAwB;AACtB,UAAI,MAAM,CAAC,cAAP,CAAsB,CAAtB,CAAJ,EAA8B;AAC5B,YAAM,SAAS,GAAG,MAAM,CAAC,CAAD,CAAxB;AACA,QAAA,KAAK,CAAC,IAAN,CAAW,SAAX;AACD;AACF;AACF;;AAED,SAAO,KAAP;AACD","sourcesContent":["import { groupToMap } from '@antv/util';\nimport { Data } from '../../interface';\n\n/** @ignore */\nexport function group(data: Data, fields: string[], appendConditions: Record<string, any[]> = {}) {\n  if (!fields) {\n    return [data];\n  }\n  const groups = groupToMap(data, fields);\n  const array = [];\n  if (fields.length === 1 && appendConditions[fields[0]]) {\n    const values = appendConditions[fields[0]];\n    for (const value of values) {\n      const arr = groups[`_${value}`];\n      if (arr) {\n        // 可能存在用户设置 values ，但是数据中没有对应的字段，则这时候 arr 就为 null\n        array.push(arr);\n      }\n    }\n  } else {\n    for (const k in groups) {\n      if (groups.hasOwnProperty(k)) {\n        const eachGroup = groups[k];\n        array.push(eachGroup);\n      }\n    }\n  }\n\n  return array;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}