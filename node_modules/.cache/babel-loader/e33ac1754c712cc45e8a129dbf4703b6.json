{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/xiaxiaoyu/Desktop/javascript/PHONE_STORE_FE/src/context/ProductContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport productService from \"services/product.service\";\nconst ProductContext = /*#__PURE__*/createContext();\n\nconst ProductProvider = ({\n  children\n}) => {\n  _s();\n\n  const [products, setProducts] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    setIsLoading(true);\n    productService.getProducts(page).then(response => {\n      setProducts(response.data);\n      setIsLoading(false);\n    });\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: {\n      products,\n      setProducts,\n      isLoading,\n      setIsLoading,\n      page,\n      setPage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductProvider, \"ZMVs5U13013GwAc/s/kNJdtTx/Y=\");\n\n_c = ProductProvider;\n\nconst useProduct = () => {\n  _s2();\n\n  const context = useContext(ProductContext);\n\n  if (context === undefined) {\n    throw new Error('useProduct must be used within a ProductProvider');\n  }\n\n  return context;\n};\n\n_s2(useProduct, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { ProductContext, ProductProvider, useProduct };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductProvider\");","map":{"version":3,"sources":["/Users/xiaxiaoyu/Desktop/javascript/PHONE_STORE_FE/src/context/ProductContext.jsx"],"names":["React","createContext","useContext","useEffect","useState","productService","ProductContext","ProductProvider","children","products","setProducts","isLoading","setIsLoading","page","setPage","getProducts","then","response","data","useProduct","context","undefined","Error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,MAAMC,cAAc,gBAAGL,aAAa,EAApC;;AAEA,MAAMM,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACxC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAP,IAAAA,cAAc,CAACU,WAAf,CAA2BF,IAA3B,EAAiCG,IAAjC,CAAuCC,QAAD,IAAc;AAClDP,MAAAA,WAAW,CAACO,QAAQ,CAACC,IAAV,CAAX;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAHD;AAID,GANQ,EAMN,CAACC,IAAD,CANM,CAAT;AAQA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AAAEJ,MAAAA,QAAF;AAAYC,MAAAA,WAAZ;AAAyBC,MAAAA,SAAzB;AAAoCC,MAAAA,YAApC;AAAkDC,MAAAA,IAAlD;AAAwDC,MAAAA;AAAxD,KADT;AAAA,cAGGN;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CApBD;;GAAMD,e;;KAAAA,e;;AAsBN,MAAMY,UAAU,GAAG,MAAK;AAAA;;AACtB,QAAMC,OAAO,GAAGlB,UAAU,CAACI,cAAD,CAA1B;;AACA,MAAGc,OAAO,KAAKC,SAAf,EAA0B;AACxB,UAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACD;;AACD,SAAOF,OAAP;AACD,CAND;;IAAMD,U;;AASN,SAASb,cAAT,EAAyBC,eAAzB,EAA0CY,UAA1C","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport productService from \"services/product.service\";\r\n\r\nconst ProductContext = createContext();\r\n\r\nconst ProductProvider = ({ children }) => {\r\n  const [products, setProducts] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [page, setPage] = useState(1)\r\n  \r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    productService.getProducts(page).then((response) => {\r\n      setProducts(response.data);\r\n      setIsLoading(false);\r\n    });\r\n  }, [page]);\r\n\r\n  return (\r\n    <ProductContext.Provider\r\n      value={{ products, setProducts, isLoading, setIsLoading, page, setPage }}\r\n    >\r\n      {children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n\r\nconst useProduct = () =>{\r\n  const context = useContext(ProductContext)\r\n  if(context === undefined) {\r\n    throw new Error('useProduct must be used within a ProductProvider')\r\n  }\r\n  return context\r\n}\r\n\r\n\r\nexport { ProductContext, ProductProvider, useProduct };\r\n"]},"metadata":{},"sourceType":"module"}