{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { TOOLTIP_CSS_CONST } from '@antv/component';\nimport { deepMix } from '@antv/util';\nimport { HtmlTooltip } from '../../../../dependents';\nimport Action from '../../base';\nimport { getDelegationObject } from '../../util';\nvar AXIS_DESCRIPTION_TOOLTIP = 'aixs-description-tooltip';\n\nvar AxisDescription =\n/** @class */\nfunction (_super) {\n  __extends(AxisDescription, _super);\n\n  function AxisDescription() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AxisDescription.prototype.show = function () {\n    var context = this.context;\n    var axis = getDelegationObject(context).axis;\n    var _a = axis.cfg.title,\n        description = _a.description,\n        text = _a.text,\n        descriptionTooltipStyle = _a.descriptionTooltipStyle;\n    var _b = context.event,\n        x = _b.x,\n        y = _b.y;\n\n    if (!this.tooltip) {\n      this.renderTooltip();\n    }\n\n    this.tooltip.update({\n      title: text || '',\n      customContent: function () {\n        return \"\\n          <div class=\\\"\".concat(TOOLTIP_CSS_CONST.CONTAINER_CLASS, \"\\\" style={\").concat(descriptionTooltipStyle, \"}>\\n            <div class=\\\"\").concat(TOOLTIP_CSS_CONST.TITLE_CLASS, \"\\\">\\n              \\u5B57\\u6BB5\\u8BF4\\u660E\\uFF1A\").concat(description, \"\\n            </div>\\n          </div>\\n        \");\n      },\n      x: x,\n      y: y\n    });\n    this.tooltip.show();\n  };\n\n  AxisDescription.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    this.tooltip && this.tooltip.destroy();\n  };\n\n  AxisDescription.prototype.hide = function () {\n    this.tooltip && this.tooltip.hide();\n  };\n\n  AxisDescription.prototype.renderTooltip = function () {\n    var _a;\n\n    var view = this.context.view;\n    var canvas = view.canvas;\n    var region = {\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: canvas.get('width'),\n        y: canvas.get('height')\n      }\n    };\n    var tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region: region,\n      visible: false,\n      containerId: AXIS_DESCRIPTION_TOOLTIP,\n      domStyles: __assign({}, deepMix({}, (_a = {}, // 超长的时候，tooltip tip 最大宽度为 50%，然后可以换行\n      _a[TOOLTIP_CSS_CONST.CONTAINER_CLASS] = {\n        'max-width': '50%',\n        padding: '10px',\n        'line-height': '15px',\n        'font-size': '12px',\n        color: 'rgba(0, 0, 0, .65)'\n      }, _a[TOOLTIP_CSS_CONST.TITLE_CLASS] = {\n        'word-break': 'break-all',\n        'margin-bottom': '3px'\n      }, _a)))\n    });\n    tooltip.init();\n    tooltip.setCapture(false);\n    this.tooltip = tooltip;\n  };\n\n  return AxisDescription;\n}(Action);\n\nexport default AxisDescription;","map":{"version":3,"sources":["../../../../../src/interaction/action/component/axis/axis-description.ts"],"names":[],"mappings":"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","sourcesContent":["import { TOOLTIP_CSS_CONST } from '@antv/component';\nimport { deepMix } from '@antv/util';\nimport { HtmlTooltip } from '../../../../dependents';\nimport Action from '../../base';\nimport { getDelegationObject } from '../../util';\nimport cx from 'classnames';\n\nconst AXIS_DESCRIPTION_TOOLTIP = 'aixs-description-tooltip';\n\nclass AxisDescription extends Action {\n  private tooltip;\n\n  public show() {\n    const context = this.context;\n    const { axis } = getDelegationObject(context);\n    const { description, text, descriptionTooltipStyle } = axis.cfg.title;\n    const { x, y } = context.event;\n    if (!this.tooltip) {\n      this.renderTooltip();\n    }\n    this.tooltip.update({\n      title: text || '',\n      customContent: () => {\n        return `\n          <div class=\"${TOOLTIP_CSS_CONST.CONTAINER_CLASS}\" style={${descriptionTooltipStyle}}>\n            <div class=\"${TOOLTIP_CSS_CONST.TITLE_CLASS}\">\n              字段说明：${description}\n            </div>\n          </div>\n        `;\n      },\n      x,\n      y,\n    });\n    this.tooltip.show();\n  }\n\n  public destroy() {\n    super.destroy();\n    this.tooltip && this.tooltip.destroy();\n  }\n\n  public hide() {\n    this.tooltip && this.tooltip.hide();\n  }\n\n  public renderTooltip() {\n    const view = this.context.view;\n    const canvas = view.canvas;\n    const region = {\n      start: { x: 0, y: 0 },\n      end: { x: canvas.get('width'), y: canvas.get('height') },\n    };\n    const tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region,\n      visible: false,\n      containerId: AXIS_DESCRIPTION_TOOLTIP,\n      domStyles: {\n        ...deepMix(\n          {},\n          {\n            // 超长的时候，tooltip tip 最大宽度为 50%，然后可以换行\n            [TOOLTIP_CSS_CONST.CONTAINER_CLASS]: {\n              'max-width': '50%',\n              padding: '10px',\n              'line-height': '15px',\n              'font-size': '12px',\n              color: 'rgba(0, 0, 0, .65)',\n            },\n            [TOOLTIP_CSS_CONST.TITLE_CLASS]: {\n              'word-break': 'break-all',\n              'margin-bottom': '3px',\n            },\n          }\n        ),\n      },\n    });\n    tooltip.init();\n    tooltip.setCapture(false);\n    this.tooltip = tooltip;\n  }\n}\nexport default AxisDescription;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}